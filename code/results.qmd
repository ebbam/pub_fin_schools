---
title: "Trend Analysis Results"
format: 
  html:
    embed-resources: true
    theme: cosmo
    toc: true
    toc_float: true
    toc-expand: 3
    toc-depth: 4
    toc-location: left
editor_options: 
  chunk_output_type: inline
---

# Introduction

The following document summarises the progress made thus far on Chapter 1: Local Fiscal Risks of Decarbonisation of my DPhil. The work aims to pursue a better understanding of how industrial transformation impacts local well-being. From an original interest in looking at all aspects of local public finance, the project has narrowed to focus on expenditure on public education and its connection to industrial prosperity and transformation.

Below, I provide some descriptive statistics and figures about the data as well as some preliminary efforts to explore the trends in these values. 

*The main research question is: How does industrial transformation/activity impact county-level expenditure on public education?*



```{r, echo = FALSE, message = FALSE}

rm(list = ls())

knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)

library(tidyverse)
library(conflicted)
library(stargazer)
library(sf)
library(zoo)
library(tidycensus)
library(here)
library(viridis)
library(datasets)
library(broom)
library(fixest)
library(readxl)
library(ggrepel)
library(plm)
library(ggbreak)
library(getspanel)
library(usmap)
library(gridExtra)
library(kableExtra)
library(patchwork)
library(lattice)
library(lubridate)
library(stringr)
library(xts)
library(urca)
library(dynlm)
library(tseries)
library(quantmod)
library(lmtest)
library(sandwich)
library(vars)
library(ggridges)
library(grid)
library(ggplotify)

conflict_prefer_all("dplyr", quiet = TRUE)

source(here('code/source_code/useful_functions.R'))
source(here('code/source_code/dicts.R'))
source(here('code/source_code/cz_cleaning.R'))

unit_id = "cz_id"

```


## CZ-level Education Expenditure

::: panel-tabset
### Data

```{r, echo = FALSE, message = FALSE, warnings = FALSE, fig.height = 10, include = FALSE}

# mines_restr <- readRDS(here("data/out/regression_data_complete_fips.RDS")) %>% 
#   group_by(fips) %>%
#     arrange(fips, year) %>% 
#   mutate(across(c(starts_with("log_real_gdp_total") | starts_with("log_real_gdp_priv_ind")), ~.- dplyr::lag(., 1), .names = "diff_{.col}")) %>% 
#   ungroup  
# 
# mines_cz <- readRDS(here("data/out/cz_dataset.RDS"))
# mines_cz_1990 <- readRDS(here("data/out/cz_1990_dataset.RDS"))

if(unit_id == "cz_id"){
  print(paste0("Running analysis on CZs (", unit_id, ")."))
  mines_restr <- readRDS(here("data/out/cz_dataset.RDS")) %>% 
  # rename all variables that contain monetary values to exclude "real" - all values in this dataset DO have real values!!! see school_dist_cleaning.Rmd
  #rename_with(~gsub("real_", "", .x, fixed = TRUE)) %>% 
    mutate(unit = get(unit_id)) %>% 
    rename(state = main_state)
  
  states_input <- readRDS(here("data/out/regression_data_complete_fips.RDS")) %>% 
    select(state, state_name) %>% 
    distinct %>% 
    left_join(., distinct(select(mines_restr, state, unit)), by = "state")
    
  ss <- readRDS(here("data/temp/shift_shares_cz_base_01_05_11.RDS")) %>% 
  mutate(unit = get(unit_id))
  
}else if(unit_id == "fips"){
  print(paste0("Running analysis on counties (", unit_id, ")."))
  mines_restr <- readRDS(here("data/out/regression_data_complete_fips.RDS")) %>% 
    mutate(unit = get(unit_id)) %>% 
      group_by(unit) %>%
    arrange(unit, year) %>% 
  mutate(across(c(starts_with("log_real_gdp_total") | starts_with("log_real_gdp_priv_ind")), ~.- dplyr::lag(., 1), .names = "diff_{.col}")) %>% 
  ungroup 
  
  states_input <- mines_restr %>% select(fips, state, state_name) %>% distinct %>% rename(unit = fips)
  
    ss <- readRDS(here("data/temp/shift_shares_base_01_05_11.RDS")) %>% 
  mutate(unit = get(unit_id)) 
}else{
  stop("You need to specify fips or cz_id as the panel unit.")}


```

```{r, echo = FALSE, warning = FALSE, message = FALSE}

# Relevant vars for trend analysis below
# Should be central place to add more vars if necessary
vars_grab <- c("real_gdp_priv_ind",
               "real_gdp_total",
               "real_Elem_Educ_Total_Exp", 
               "real_Total_Educ_Total_Exp",
               "real_Property_Tax", 
               "real_Total_Revenue",
               "real_Total_Fed_IG_Revenue",
               "real_Total_State_IG_Revenue",
               "real_Total_IG_Revenue",
               "real_Tot_Local_IG_Rev",
               "real_Total_Rev_Own_Sources",
               "Enrollment", 
               "pop_total")

vars_grab_restr <- c("real_gdp_priv_ind",
                     "real_gdp_priv_ind_pc",
               "real_gdp_total",
               "real_gdp_total_pc",
               "real_Elem_Educ_Total_Exp",
               "real_Elem_Educ_Total_Exp_pp",
               "real_Total_Educ_Total_Exp",
               "real_Total_Educ_Total_Exp_pp",
               "real_Property_Tax", 
               "real_Property_Tax_pp", 
               "real_Total_Revenue",
               "real_Total_Fed_IG_Revenue",
               "real_Total_IG_Revenue",
               "real_Total_State_IG_Revenue",
               "real_Tot_Local_IG_Rev",
               "real_Total_Rev_Own_Sources",
               "Enrollment", 
               "pop_total")

mines_tots <- mines_restr %>% 
  #mutate(across(c(vars_grab_restr, paste0("log_", vars_grab_restr)), ~. - dplyr::lag(., 1), .names = "diff_{.col}")) %>% 
  group_by(year) %>% 
  mutate(natl_pop = sum(pop_total, na.rm = TRUE)) %>% 
  ungroup

## Summarise to State Level
mines_state <- mines_tots %>%
  select(state, unit, year, vars_grab) %>% 
  group_by(state, year) %>%
  summarise(across(vars_grab, ~sum(., na.rm = TRUE)),
            n_unit = n_distinct(unit)) %>% 
  ungroup %>% 
  mutate(real_Elem_Educ_Total_Exp_pp = real_Elem_Educ_Total_Exp/Enrollment,
         real_Total_Educ_Total_Exp_pp = real_Total_Educ_Total_Exp/Enrollment,
         real_gdp_priv_ind_pc = real_gdp_priv_ind/pop_total,
         real_gdp_total_pc = real_gdp_total/pop_total,
         real_Property_Tax_pp = real_Property_Tax/Enrollment,
         across(!c(state, year, n_unit), ~log(.), .names = "log_{.col}"),
                  time = year - 2000) %>% 
  group_by(state) %>% 
  arrange(state, year) %>% 
         mutate(across(!c(year, n_unit), ~. - dplyr::lag(., 1), .names = "diff_{.col}")) %>% 
  ungroup

      
## Summarise to natl level
mines_natl <- mines_tots %>%
  select(state, unit, year, vars_grab) %>% 
  group_by(year) %>%
  summarise(across(vars_grab, ~sum(., na.rm = TRUE)),
            n_unit = n_distinct(unit),
            n_state = n_distinct(state)) %>% 
  ungroup %>% 
  mutate(real_Elem_Educ_Total_Exp_pp = real_Elem_Educ_Total_Exp/Enrollment,
         real_Total_Educ_Total_Exp_pp = real_Total_Educ_Total_Exp/Enrollment,
         real_gdp_priv_ind_pc = real_gdp_priv_ind/pop_total,
         real_gdp_total_pc = real_gdp_total/pop_total,
         real_Property_Tax_pp = real_Property_Tax/Enrollment,
         across(!c(year, n_unit, n_state), ~log(.), .names = "log_{.col}"),
         across(!c(year, n_unit, n_state,), ~. - dplyr::lag(., 1), .names = "diff_{.col}"),
         time = year - 2000,
         id = "USA")

mean_df <- mines_tots %>% 
  group_by(year) %>%
             summarise(real_Total_Educ_Total_Exp = mean(real_Total_Educ_Total_Exp, na.rm = TRUE),
                       real_Total_Educ_Total_Exp_pp = mean(real_Total_Educ_Total_Exp_pp, na.rm = TRUE),
                       log_real_Total_Educ_Total_Exp = mean(log_real_Total_Educ_Total_Exp, na.rm = TRUE),
                       log_real_Total_Educ_Total_Exp_pp = mean(log_real_Total_Educ_Total_Exp_pp, na.rm = TRUE))

# mean_df_cz <- mines_cz %>% 
#   group_by(year) %>%
#              summarise(real_Total_Educ_Total_Exp = mean(real_Total_Educ_Total_Exp, na.rm = TRUE),
#                        real_Total_Educ_Total_Exp_pp = mean(real_Total_Educ_Total_Exp_pp, na.rm = TRUE),
#                        log_real_Total_Educ_Total_Exp = mean(log_real_Total_Educ_Total_Exp, na.rm = TRUE),
#                        log_real_Total_Educ_Total_Exp_pp = mean(log_real_Total_Educ_Total_Exp_pp, na.rm = TRUE))


```


::: 

:::

# Trends

```{r, echo = FALSE, cache = TRUE}
# Data Transformation Function

# Dataframe to easily match state names and CZ ids if necessary}
# To be resolved: when a CZ is present in multiple states
# code_match <- mines_restr %>% 
#   select(unit, state, cz_id, cz_id_1990) %>% 
#   distinct

# Pass a dataframe with distinct ids (ie. state, CZ, or fips)
# Dataframe should only have variables that should be transformed in line with all calls in the following function

data_transform <- function(df, vars, unit_id, time_id){
  df %>% 
    select(c(unit_id, time_id, all_of(vars))) %>%
    mutate(across(!c(unit_id, time_id),
                  list(t0 = ~(ifelse(!!sym(time_id) == 2001, 1, NA))*.,
                       t2 = ~(ifelse(!!sym(time_id) == 2003, 1, NA))*.),
                  .names = "{.fn}_{.col}")) %>% 
    group_by(!!sym(unit_id)) %>% 
    fill(matches("^t[[:digit:]]"),
      .direction = "down") %>% 
    mutate(across(!c(!!sym(time_id), matches("^t[[:digit:]]")), list(
                                                           ma3 = ~rollmean(., 3, align = 'right', fill = NA)),
                  .names = "{.fn}_{.col}")) %>% 
    ungroup %>% 
    mutate(across(vars,
                  list(delta = ~ . - get(paste0("t0_", cur_column())),
                       delta_ma3 = ~ get(paste0("ma3_", cur_column())) - get(paste0("t2_", cur_column()))),
                       .names = "{.fn}_{.col}")) %>% return(.)
}

rel_vars <- c("real_Elem_Educ_Total_Exp", "real_Elem_Educ_Total_Exp_pp",
              "real_Property_Tax","real_Property_Tax_pp", 
              "real_gdp_total", "real_gdp_total_pc", 
              "real_Total_Educ_Total_Exp", "real_Total_Educ_Total_Exp_pp", 
              "log_real_Elem_Educ_Total_Exp", "log_real_Elem_Educ_Total_Exp_pp",
              "log_real_Property_Tax","log_real_Property_Tax_pp",
              "log_real_Total_Educ_Total_Exp", "log_real_Total_Educ_Total_Exp_pp", 
              "log_real_gdp_total", "log_real_gdp_total_pc")

if(unit_id == "fips"){
  fips_trends_dat <- data_transform(mines_restr, rel_vars, "unit", "year") %>% 
  left_join(., states_input, by = c("unit")) #%>% 
  #left_join(., code_match, by = "unit")
}else if(unit_id == "cz_id"){
    fips_trends_dat <- data_transform(mines_restr, rel_vars, "unit", "year") %>% 
  left_join(., states_input, by = c("unit"))
}

# cz_trends_dat <- data_transform(mines_cz, rel_vars, "cz_id", "year") %>% 
#   left_join(., distinct(select(code_match, -fips)), multiple = "first", by = "cz_id")
# 
# cz_1990_trends_dat <- data_transform(mines_cz_1990, rel_vars, "cz_id_1990", "year") %>% 
#   left_join(., distinct(select(code_match, -fips)), multiple = "first", by = "cz_id_1990")

#cz_1990_trends_dat %>% saveRDS(here('data/temp/cz_1990_trends_dat.rds'))

state_trends_dat <- states_input %>% 
  select(state, state_name) %>% 
  distinct %>% 
  left_join(data_transform(mines_state, rel_vars, "state", "year"), ., by = "state")

natl_trends_dat <- data_transform(mines_natl, rel_vars, "id", "year")

```

```{r, echo = FALSE, cache = TRUE}

# National macro data

# # Read in macro data
uer <- read.csv(here('data/raw/macro_vars/UNRATE.csv')) %>%
    mutate(DATE = ymd(DATE),
           FD_UNRATE = UNRATE - lag(UNRATE))

gdp <- read.csv(here('data/raw/macro_vars/GDP.csv')) %>%
  mutate(DATE = ymd(DATE),
         FD_GDP = GDP - lag(GDP))

gdpc1 <- read.csv(here('data/raw/macro_vars/GDPC1.csv')) %>%
  mutate(DATE = ymd(DATE),
         FD_GDPC1 = GDPC1 - lag(GDPC1))

# NOTE: Consider replacing with total population values from official source - this is just a sum over the dataset we have - missing ~100M people!
pop_natl <- mines_natl %>% select(year, pop_total)
gdp_annual <- read.csv(here('data/raw/macro_vars/GDPC1_annual.csv')) %>% 
  mutate(year = as.numeric(substr(DATE, 1, 4)),
         gdp_natl = GDPC1) %>% 
  left_join(., pop_natl, by = "year") %>% 
  mutate(gdp_natl_pc = gdp_natl/pop_total,
         diff_gdp_natl = gdp_natl - lag(gdp_natl, 1),
         diff_gdp_natl_pc = gdp_natl_pc - lag(gdp_natl_pc, 1),
         log_gdp_natl = log(gdp_natl),
         log_gdp_natl_pc = log(gdp_natl_pc),
         diff_log_gdp_natl = log_gdp_natl - lag(log_gdp_natl, 1),
         diff_log_gdp_natl_pc = log_gdp_natl_pc - lag(log_gdp_natl_pc, 1)) 

# gdp_annual %>% 
#   select(!c(DATE, GDPC1)) %>% 
#   pivot_longer(!year) %>% 
#   ggplot(aes(x = year, y = value)) + 
#   geom_line() + 
#   facet_wrap(~name, scales = "free", ncol = 1)

#row.names(gdp_annual) = gdp_annual[1]

macro_natl <- left_join(uer, gdp, by = "DATE") %>%
  left_join(., gdpc1, by = "DATE") %>%
  tibble

#plot(decompose(gdp_annu type = 'additive'))

```


What would be great is to be able to econometrically test when a county is "declining." In the first step, it would be good to identify when a county is declining overall (GDP, poverty, etc) but ideally eventually apply this to the education outcome. My hope is that being able to identify counties that are "declining" we can either use this variable as a covariate or as a central point of analysis. The below analysis looks at state- and commuting zone level variables.

Some current options:

-   Deviation from t_0
-   Change in logs
-   y ~ beta*t
-   Coefficient Fixed Effect Step Indicator Saturation (Breaks in the coefficient for each individual)

<!-- -   Autocorrelation (X) -->

<!-- -   Trend indicator saturation - negative trend breaks? (\_) -->

-   Exhibit national or state-level GDP growth as global common factor; counties with negative factor loadings might arguably exhibit decline (\_)

-   Jennie's suggestion:

    -   plot county- , CZ, or state-level deviations from a national trend

::: panel-tabset
## Education

### State Time Trends

```{r, echo = FALSE, cache = TRUE}

trends <- feols(log_real_gdp_priv_ind ~ time:as.factor(state) | state + year, data = mines_state, se = "cluster", cluster = "state", panel.id = ~state+year)

#trends %>% etable(., se.below = TRUE)

trends$coefficients %>%

  tibble %>%

  rename(coef = '.') %>%

  ggplot() +

  geom_histogram(aes(x = coef), bins = 15) +

  theme_bw() +

  labs(title = "Histogram of State-level Trend Coefficient: (log) Real Private Industry GDP")+

  geom_vline(aes(xintercept = 0), colour = "red", linetype = "dotted")

```

::: panel-tabset
### Deviation from T0

One way to look at this descriptively is to look at the national, state and county-level trends. Here the "trend" is simply the difference between expenditure per pupil at the relevant level and expenditure per pupil in the first available observation as represented here: https://www.princeton.edu/\~erossi/DTNLC.pdf. (Note: this measure is imperfect for many reasons).

::: panel-tabset
#### States

```{r, fig.height = 10, echo = FALSE}

natl_pivoted <- natl_trends_dat %>% 
  select(year, contains('delta') & contains('log_real_Elem_Educ_Total_Exp_pp')) %>% 
  pivot_longer(!year) %>% 
  mutate(value = ifelse(grepl("ma3", name) & year == 2002, 0, value))

## State level trends with national trend reference line
state_trends_dat %>% 
  filter(state != "ME") %>% 
  select(state, year, contains('delta') & contains('log_real_Elem_Educ_Total_Exp_pp')) %>% 
  pivot_longer(!c(state, year)) %>% 
  ggplot(aes(x = year, y = value, colour = state)) +
      geom_line() +
  geom_line(data = natl_pivoted, aes(x = year, y = value), colour = "black") +
          facet_wrap(~name, scales = "free") +
  theme(legend.position = 'none') + 
  labs(title = "Difference from t0 in levels", 
       subtitle = "States")

```

```{r, fig.height = 10, echo = FALSE}

# filter(state_trends_dat, year == 2018) %>%
#   rename(state = state_name) %>%
#   plot_usmap(data = ., values = "real_Elem_Educ_Total_Exp_pp", regions = "states", exclude = c("AK", "HI")) +
#   scale_fill_gradient(low = "thistle1", high = "purple4", na.value = "grey98") +
#     theme(panel.background = element_rect(color = "white", fill = "white"),
#         plot.title = element_text(face = "bold"), legend.background=element_blank(), legend.title = element_text("hello")) +
#     labs(title = "State Level Elem. Ed. Exp. pp (2018)")

```

```{r, fig.height = 10, echo = FALSE}

# filter(state_trends_dat, year == 2018) %>%
#   rename(state = state_name) %>%
#   plot_usmap(data = ., values = "real_Total_Educ_Total_Exp_pp", regions = "states", exclude = c("AK", "HI")) +
#   scale_fill_gradient(low = "thistle1", high = "purple4", na.value = "grey98") +
#   #scale_fill_distiller(colours=c(bl,"white", re), name = "", direction = 1, na.value = "gray90", limits = c(-1, 1)) +
#     theme(panel.background = element_rect(color = "white", fill = "white"),
#         plot.title = element_text(face = "bold"), legend.background=element_blank(), legend.title = element_text("hello")) +
#     labs(title = "State Level Elem. Ed. Exp. pp (2018)")

```

#### CZs

::: panel-tabset
```{r, echo = FALSE, results = 'asis', fig.height = 12}

# temp_cz <- cz_trends_dat %>% 
#   filter(year > 2001 & state != "ME") %>% 
#   mutate(delta_ma3_log_real_Elem_Educ_Total_Exp_pp = ifelse(year == 2002, 0, delta_ma3_log_real_Elem_Educ_Total_Exp_pp))

temp_natl <- natl_trends_dat %>% 
  filter(year > 2001) %>% 
  mutate(delta_ma3_log_real_Elem_Educ_Total_Exp_pp = ifelse(year == 2002, 0, delta_ma3_log_real_Elem_Educ_Total_Exp_pp))

temp_state <- state_trends_dat %>% 
  filter(year > 2001 & state != "ME") %>% 
  mutate(delta_ma3_log_real_Elem_Educ_Total_Exp_pp = ifelse(year == 2002, 0, delta_ma3_log_real_Elem_Educ_Total_Exp_pp))
# 
# ## CZ level trends by state with national trend reference line
# for(k in names(select(temp_cz, contains('delta') & contains('log_real_Elem_Educ_Total_Exp_pp')))){
#   cat('##### ', k, ' \n')
#     p <- temp_cz %>% 
#       filter(state != "ME") %>% 
#       select(state, cz_id, year, k) %>% 
#       pivot_longer(!c(state, year, cz_id)) %>% 
#       ggplot(aes(x = year, y = value, colour = cz_id)) +
#       geom_line() +
#       geom_line(data = temp_natl, aes(x = year, y = get(k)), colour = "black", linetype = "dashed") +
#       geom_line(data = temp_state, aes(x = year, y = get(k)), colour = "red", linetype = "dashed") +
#       theme_minimal() +
#       theme(legend.position = 'none', strip.text = element_text(size = 12)) +
#       scale_colour_viridis(discrete = TRUE) + 
#       facet_wrap(~state, ncol = 7, scales = "free") +
#       labs(title = paste0("Trends: ", k), 
#            subtitle = "Commuting Zones",
#            x = "Year",
#            y = k) 
#     
#     print(p)
#               cat('\n')
#               cat('\n')
#               }

```

#### Counties

::: panel-tabset
```{r, echo = FALSE, results = 'asis', fig.height = 12}

temp_fips <- fips_trends_dat %>%
  filter(year > 2001) %>%  #& state_name != "ME") %>%
  mutate(delta_ma3_log_real_Elem_Educ_Total_Exp_pp = ifelse(year == 2002, 0, delta_ma3_log_real_Elem_Educ_Total_Exp_pp))


for(k in names(select(fips_trends_dat, contains('delta') & contains('log_real_Elem_Educ_Total_Exp_pp')))){
  cat('##### ', k, ' \n')
  p <- temp_fips %>%
   # filter(state != "ME") %>%
    select(state, unit, year, k) %>%
    pivot_longer(!c(state, year, unit)) %>%
    ggplot(aes(x = year, y = value, colour = unit)) +
    geom_line() +
    geom_line(data = temp_natl, aes(x = year, y = get(k)), colour = "black", linetype = "dashed") +
    geom_line(data = filter(temp_state, state != "ME"), aes(x = year, y = get(k)), colour = "red", linetype = "dashed") +
    theme_minimal() +
    theme(legend.position = 'none', strip.text = element_text(size = 12)) +
    scale_colour_viridis(discrete = TRUE) +
    facet_wrap(~state, ncol = 7, scales = "free") +
    theme(legend.position = 'none') +
    labs(title = paste0("Trends: ", k),
         subtitle = unit_id,
         x = "Year",
           y = k)

  print(p)
              cat('\n')
              cat('\n')
              }

```
:::
:::

### Mean of change-log

Trend in log Elementary Education Expenditure (growth rate). The below plots show the mean of the change in log of the variable of interest. In the first panel I include no additional controls but in the latter two panels I include the state and national level growth rates as controls.

```{r, echo = FALSE, cache = TRUE, fig.height = 8}

# Create state-outlines
df <- usmap::us_map(regions = "states") %>% filter(!(abbr %in% c("HI", "AK")))

dat <- do.call('rbind', split(df, paste(df$abbr, df$piece)) |>
  lapply(function(x) st_sf(state = x$abbr[1],
                           st_sfc(st_polygon(list(cbind(x$x, x$y)))), 
                           crs = usmap::usmap_crs())))

natl_trend_pc <- mines_natl %>% 
  select(year, diff_log_real_Elem_Educ_Total_Exp_pp) %>% 
  distinct %>% 
  lm(diff_log_real_Elem_Educ_Total_Exp_pp ~ 1, data = .) %>% 
  .$coefficients %>% pluck(1)
  
county_ed_trends = mines_restr %>% 
  group_by(unit, state) %>% 
  do(model = lm(diff_log_real_Elem_Educ_Total_Exp_pp ~ 1, data = .)) %>% 
  ungroup 

county_ed_trends_controlled_natl = mines_restr %>% 
  left_join(., mines_natl, by = "year") %>% 
  group_by(unit, state) %>% 
  do(model = lm(diff_log_real_Elem_Educ_Total_Exp_pp.x ~ 1 +  diff_log_real_Elem_Educ_Total_Exp_pp.y, data = .)) %>% 
  ungroup 

county_ed_trends_controlled_state = mines_restr %>% 
   left_join(., mines_state, by = c("year", "state")) %>% 
  group_by(unit, state) %>% 
  do(model = lm(diff_log_real_Elem_Educ_Total_Exp_pp.x ~ 1 + diff_log_real_Elem_Educ_Total_Exp_pp.y, data = .)) %>% 
  ungroup 

county_ed_trends <- county_ed_trends %>% 
  rename("trend" = model) %>% 
  left_join(., county_ed_trends_controlled_natl, by = c('unit', 'state')) %>% 
  rename("trend_cont_natl" = model) %>% 
  left_join(., county_ed_trends_controlled_state, by = c('unit', 'state')) %>% 
  rename("trend_cont_state" = model)

county_ed_coefs <- tibble()
county_ed_sensitivities <- tibble()
for(k in 1:nrow(county_ed_trends)){
  s <- county_ed_trends %>% slice(k) %>% pull(unit)
  st <- county_ed_trends %>% slice(k) %>% pull(state)
  t <- county_ed_trends %>% slice(k) %>% 
    pull(trend) %>% first %>% .$coefficients %>% pluck(1) 
  t_n <- county_ed_trends %>% slice(k) %>% 
    pull(trend_cont_natl) %>% first %>% .$coefficients %>% pluck(1) 
  t_s <- county_ed_trends %>% slice(k) %>% 
    pull(trend_cont_state) %>% first %>% .$coefficients %>% pluck(1)
  

  s_n <- county_ed_trends %>% slice(k) %>% 
    pull(trend_cont_natl) %>% first %>% .$coefficients %>% pluck(2) 
  s_s <- county_ed_trends %>% slice(k) %>% 
    pull(trend_cont_state) %>% first %>% .$coefficients %>% pluck(2)
  
  county_ed_coefs <- rbind(county_ed_coefs, c(s,st, t, t_n, t_s))
  county_ed_sensitivities <- rbind(county_ed_sensitivities, c(s, st, s_n, s_s))
}

colnames(county_ed_coefs) <- names(county_ed_trends)
colnames(county_ed_sensitivities) <- c("unit", "state", "sensitivity_state", "sensitivity_natl")
county_ed_coefs <- county_ed_coefs %>% mutate(across(c(3:5), ~as.numeric(.)))
county_ed_sensitivities <- county_ed_sensitivities %>% mutate(across(c(3:4), ~as.numeric(.)))

county_ed_coefs %>% 
  pivot_longer(cols = contains("trend")) %>% 
  mutate(name = factor(name, levels=c("trend", "trend_cont_state", "trend_cont_natl"), labels = c("Trend in Elem. Ed. Exp. pp", "Trend in Elem. Ed. Exp. pp Controlled for State Trends", "Trend in Elem. Ed. Exp. pp Controlled for National Trends"))) %>% 
  ggplot() +
  geom_histogram(aes(x = value, fill = name), bins = 100, alpha = 0.9) +
  geom_vline(aes(xintercept = 0), colour = "darkgreen", linetype = "dotted") +
  geom_vline(aes(xintercept = natl_trend_pc), colour = "red", linetype = "dashed") +
  theme_bw() +
  facet_wrap(name ~ ., ncol = 1) +
  theme(legend.position = "none", strip.text = element_text(size = 14)) +
  scale_fill_brewer(palette = "Set2") +
  labs(x = NULL, y = "No. of Counties")


county_ed_coefs %>% 
  pivot_longer(cols = contains("trend")) %>% 
  mutate(name = factor(name, levels=c("trend", "trend_cont_state", "trend_cont_natl"), labels = c("Trend in Elem. Ed. Exp. pp", "Trend in Elem. Ed. Exp. pp Controlled for State Trends", "Trend in Elem. Ed. Exp. pp Controlled for National Trends"))) %>% 
  ggplot(aes(x = value, fill = name)) +
  geom_density(bins = 100, alpha = 0.5, position = "identity") +
  geom_vline(aes(xintercept = 0), colour = "darkgreen", linetype = "dotted") +
  geom_vline(aes(xintercept = natl_trend_pc), colour = "magenta", linetype = "dashed") +
  theme_bw() +
  theme(legend.position = "bottom", legend.title = element_blank()) +
  scale_fill_brewer(palette = "Set2") +
  labs(x = NULL, y = "No. of Counties") 


if(unit_id == "fips"){
  county_ed_temp <- county_ed_coefs %>% 
    rename_with(~ unit_id, .cols = "unit")
  
  # Education Expenditure
  trend_ed_plot_pc <- plot_usmap(data = mute_outliers(county_ed_temp, "trend"), values = "var_muted", regions = "counties", col = "gray90", linewidth = 0.01, exclude = c("AK", "HI")) +
    scale_fill_gradient2(midpoint = 0, na.value = "grey98") +
    #scale_fill_distiller(colours=c(bl,"white", re), name = "", direction = 1, na.value = "gray90", limits = c(-1, 1)) +
      theme(panel.background = element_rect(color = "white", fill = "white"),
          plot.title = element_text(face = "bold"), legend.background=element_blank(), legend.title = element_blank()) +
      labs(title = "County-level Trend in Elem. Ed. Exp. pp") +
    ggplot2::geom_sf(data = dat, colour = "blue", fill = NA, linewidth = 0.1)
  
  # Education Expenditure
  trend_ed_natl_plot_pc <- plot_usmap(data = mute_outliers(county_ed_temp, "trend_cont_natl"), values = "var_muted", regions = "counties", col = "gray90", linewidth = 0.01, exclude = c("AK", "HI")) +
  scale_fill_gradient2(na.value = "grey98", midpoint = 0) +
    #scale_fill_distiller(colours=c(bl,"white", re), name = "", direction = 1, na.value = "gray90", limits = c(-1, 1)) +
      theme(panel.background = element_rect(color = "white", fill = "white"),
          plot.title = element_text(face = "bold"), legend.background=element_blank(), legend.position = "none") +
      labs(title = "County-level Trend in Elem. Ed. Exp. pp",
         subtitle = "Controlling for National Level Elem. Ed. Exp. pp") +
    ggplot2::geom_sf(data = dat, colour = "blue", fill = NA, linewidth = 0.1)
  
  # Education Expenditure
  trend_ed_state_plot_pc <- plot_usmap(data = mute_outliers(county_ed_temp, "trend_cont_state"), values = "var_muted", regions = "counties", col = "gray90", linewidth = 0.01, exclude = c("AK", "HI")) +
   scale_fill_gradient2(na.value = "grey98", midpoint = 0) +
    #scale_fill_distiller(colours=c(bl,"white", re), name = "", direction = 1, na.value = "gray90", limits = c(-1, 1)) +
      theme(panel.background = element_rect(color = "white", fill = "white"),
          plot.title = element_text(face = "bold"), legend.background=element_blank(), legend.position = "none") +
      labs(title = "County-level Trend in Elem. Ed. Exp. pp",
         subtitle = "Controlling for State Level Elem. Ed. Exp. pp") +
    ggplot2::geom_sf(data = dat, colour = "blue", fill = NA, linewidth = 0.1)
  
  trend_ed_plot_pc + trend_ed_state_plot_pc + trend_ed_natl_plot_pc
}

#rm(natl_trend_pc)
rm(county_ed_trends)
rm(county_ed_trends_controlled_natl)
rm(county_ed_trends_controlled_state)

```

```{r}



# Coefficient on state and national level trends
county_ed_sensitivities %>% 
  pivot_longer(cols = contains("sensitivity")) %>% 
  ggplot() +
  geom_histogram(aes(x = value, fill = name), bins = 100, position = "identity") +
  scale_fill_brewer(palette = "Set2")

if(unit_id == "fips"){
  county_ed_temp <- county_ed_sensitivities %>% 
  rename_with(~ unit_id, .cols = "unit")
  
plot_usmap(data = mute_outliers(county_ed_temp, "sensitivity_natl"), values = "var_muted", regions = "counties", col = "gray90", linewidth = 0.01, exclude = c("AK", "HI")) +
  scale_fill_gradient2(na.value = "grey98", midpoint = 0) +
  #scale_fill_distiller(colours=c(bl,"white", re), name = "", direction = 1, na.value = "gray90", limits = c(-1, 1)) +
   theme(panel.background = element_rect(color = "white", fill = "white"),
       plot.title = element_text(face = "bold"), legend.background=element_blank()) +
    labs(title = "County-level Sensitivity to National Trend in Elem. Ed. Exp. pp") +
  ggplot2::geom_sf(data = dat, colour = "blue", fill = NA, linewidth = 0.1)


plot_usmap(data = mute_outliers(county_ed_temp, "sensitivity_state"), values = "var_muted", regions = "counties", col = "gray90", linewidth = 0.01, exclude = c("AK", "HI")) +
 scale_fill_gradient2(na.value = "grey98", midpoint = 0) +
  #scale_fill_distiller(colours=c(bl,"white", re), name = "", direction = 1, na.value = "gray90", limits = c(-1, 1)) +
    theme(panel.background = element_rect(color = "white", fill = "white"),
        plot.title = element_text(face = "bold"), legend.background=element_blank()) +
    labs(title = "County-level Sensitivity to State Trend in Elem. Ed. Exp. pp") +
   ggplot2::geom_sf(data = dat, colour = "blue", fill = NA, linewidth = 0.1)
}

```
### Trends

Trend in log Elementary Education Expenditure. The below plots show the coefficient estimate on the time-step variable in the trend equation. In the first panel I include no additional controls but in the latter two panels I include the state and national level growth rates as controls.

```{r, echo = FALSE, cache = TRUE, fig.height = 8}
# Create state-outlines
df <- usmap::us_map(regions = "states") %>% filter(!(abbr %in% c("HI", "AK")))

dat <- do.call('rbind', split(df, paste(df$abbr, df$piece)) |>
  lapply(function(x) st_sf(state = x$abbr[1],
                           st_sfc(st_polygon(list(cbind(x$x, x$y)))), 
                           crs = usmap::usmap_crs())))

natl_trend_pc <- mines_natl %>% 
  select(year, diff_log_real_Elem_Educ_Total_Exp_pp) %>% 
  distinct %>% 
  lm(diff_log_real_Elem_Educ_Total_Exp_pp ~ 1, data = .) %>% 
  .$coefficients %>% pluck(1)
  
county_ed_trends = mines_restr %>% 
  group_by(unit, state) %>% 
  do(model = lm(diff_log_real_Elem_Educ_Total_Exp_pp ~ 1, data = .)) %>% 
  ungroup 

county_ed_trends_controlled_natl = mines_restr %>% 
  left_join(., mines_natl, by = "year") %>% 
  group_by(unit, state) %>% 
  do(model = lm(diff_log_real_Elem_Educ_Total_Exp_pp.x ~ 1 +  diff_log_real_Elem_Educ_Total_Exp_pp.y, data = .)) %>% 
  ungroup 

county_ed_trends_controlled_state = mines_restr %>% 
   left_join(., mines_state, by = c("year", "state")) %>% 
  group_by(unit, state) %>% 
  do(model = lm(diff_log_real_Elem_Educ_Total_Exp_pp.x ~ 1 + diff_log_real_Elem_Educ_Total_Exp_pp.y, data = .)) %>% 
  ungroup 

county_ed_trends <- county_ed_trends %>% 
  rename("trend" = model) %>% 
  left_join(., county_ed_trends_controlled_natl, by = c('unit', 'state')) %>% 
  rename("trend_cont_natl" = model) %>% 
  left_join(., county_ed_trends_controlled_state, by = c('unit', 'state')) %>% 
  rename("trend_cont_state" = model)

county_ed_coefs <- tibble()
county_ed_sensitivities <- tibble()
for(k in 1:nrow(county_ed_trends)){
  s <- county_ed_trends %>% slice(k) %>% pull(unit)
  st <- county_ed_trends %>% slice(k) %>% pull(state)
  t <- county_ed_trends %>% slice(k) %>% 
    pull(trend) %>% first %>% .$coefficients %>% pluck(1) 
  t_n <- county_ed_trends %>% slice(k) %>% 
    pull(trend_cont_natl) %>% first %>% .$coefficients %>% pluck(1) 
  t_s <- county_ed_trends %>% slice(k) %>% 
    pull(trend_cont_state) %>% first %>% .$coefficients %>% pluck(1)
  

  s_n <- county_ed_trends %>% slice(k) %>% 
    pull(trend_cont_natl) %>% first %>% .$coefficients %>% pluck(2) 
  s_s <- county_ed_trends %>% slice(k) %>% 
    pull(trend_cont_state) %>% first %>% .$coefficients %>% pluck(2)
  
  county_ed_coefs <- rbind(county_ed_coefs, c(s,st, t, t_n, t_s))
  county_ed_sensitivities <- rbind(county_ed_sensitivities, c(s, st, s_n, s_s))
}

colnames(county_ed_coefs) <- names(county_ed_trends)
colnames(county_ed_sensitivities) <- c("unit", "state", "sensitivity_state", "sensitivity_natl")
county_ed_coefs <- county_ed_coefs %>% mutate(across(c(3:5), ~as.numeric(.)))
county_ed_sensitivities <- county_ed_sensitivities %>% mutate(across(c(3:4), ~as.numeric(.)))

county_ed_coefs %>% 
  pivot_longer(cols = contains("trend")) %>% 
  mutate(name = factor(name, levels=c("trend", "trend_cont_state", "trend_cont_natl"), labels = c("Trend in Elem. Ed. Exp. pp", "Trend in Elem. Ed. Exp. pp Controlled for State Trends", "Trend in Elem. Ed. Exp. pp Controlled for National Trends"))) %>% 
  ggplot() +
  geom_histogram(aes(x = value, fill = name), bins = 100, alpha = 0.9) +
  geom_vline(aes(xintercept = 0), colour = "darkgreen", linetype = "dotted") +
  geom_vline(aes(xintercept = natl_trend_pc), colour = "red", linetype = "dashed") +
  theme_bw() +
  facet_wrap(name ~ ., ncol = 1) +
  theme(legend.position = "none", strip.text = element_text(size = 14)) +
  scale_fill_brewer(palette = "Set2") +
  labs(x = NULL, y = "No. of Counties")


county_ed_coefs %>% 
  pivot_longer(cols = contains("trend")) %>% 
  mutate(name = factor(name, levels=c("trend", "trend_cont_state", "trend_cont_natl"), labels = c("Trend in Elem. Ed. Exp. pp", "Trend in Elem. Ed. Exp. pp Controlled for State Trends", "Trend in Elem. Ed. Exp. pp Controlled for National Trends"))) %>% 
  ggplot() +
  geom_density(aes(x = value, fill = name), bins = 100, alpha = 0.5, position = "identity") +
  geom_vline(aes(xintercept = 0), colour = "darkgreen", linetype = "dotted") +
  geom_vline(aes(xintercept = natl_trend_pc), colour = "magenta", linetype = "dashed") +
  theme_bw() +
  theme(legend.position = "bottom", legend.title = element_blank()) +
  scale_fill_brewer(palette = "Set2") +
  labs(x = NULL, y = "No. of Counties")



if(unit_id == "fips"){
  county_ed_temp <- county_ed_coefs %>% 
    rename_with(~ unit_id, .cols = "unit")
  
  # Education Expenditure
  trend_ed_plot_pc <- plot_usmap(data = mute_outliers(county_ed_temp, "trend"), values = "var_muted", regions = "counties", col = "gray90", linewidth = 0.01, exclude = c("AK", "HI")) +
    scale_fill_gradient2(midpoint = 0, na.value = "grey98") +
    #scale_fill_distiller(colours=c(bl,"white", re), name = "", direction = 1, na.value = "gray90", limits = c(-1, 1)) +
      theme(panel.background = element_rect(color = "white", fill = "white"),
          plot.title = element_text(face = "bold"), legend.background=element_blank(), legend.title = element_blank()) +
      labs(title = "County-level Trend in Elem. Ed. Exp. pp") +
    ggplot2::geom_sf(data = dat, colour = "blue", fill = NA, linewidth = 0.1)
  
  # Education Expenditure
  trend_ed_natl_plot_pc <- plot_usmap(data = mute_outliers(county_ed_temp, "trend_cont_natl"), values = "var_muted", regions = "counties", col = "gray90", linewidth = 0.01, exclude = c("AK", "HI")) +
  scale_fill_gradient2(na.value = "grey98", midpoint = 0) +
    #scale_fill_distiller(colours=c(bl,"white", re), name = "", direction = 1, na.value = "gray90", limits = c(-1, 1)) +
      theme(panel.background = element_rect(color = "white", fill = "white"),
          plot.title = element_text(face = "bold"), legend.background=element_blank(), legend.position = "none") +
      labs(title = "County-level Trend in Elem. Ed. Exp. pp",
         subtitle = "Controlling for National Level Elem. Ed. Exp. pp") +
    ggplot2::geom_sf(data = dat, colour = "blue", fill = NA, linewidth = 0.1)
  
  # Education Expenditure
  trend_ed_state_plot_pc <- plot_usmap(data = mute_outliers(county_ed_temp, "trend_cont_state"), values = "var_muted", regions = "counties", col = "gray90", linewidth = 0.01, exclude = c("AK", "HI")) +
   scale_fill_gradient2(na.value = "grey98", midpoint = 0) +
    #scale_fill_distiller(colours=c(bl,"white", re), name = "", direction = 1, na.value = "gray90", limits = c(-1, 1)) +
      theme(panel.background = element_rect(color = "white", fill = "white"),
          plot.title = element_text(face = "bold"), legend.background=element_blank(), legend.position = "none") +
      labs(title = "County-level Trend in Elem. Ed. Exp. pp",
         subtitle = "Controlling for State Level Elem. Ed. Exp. pp") +
    ggplot2::geom_sf(data = dat, colour = "blue", fill = NA, linewidth = 0.1)
  
  trend_ed_plot_pc + trend_ed_state_plot_pc + trend_ed_natl_plot_pc
}

rm(natl_trend_pc)
rm(county_ed_trends)
rm(county_ed_trends_controlled_natl)
rm(county_ed_trends_controlled_state)

```
### Growth Rates

::: panel-tabset
#### States

```{r, echo = FALSE}

mines_state %>%
  filter(year != 2001) %>%
  ggplot() +
  geom_line(aes(x = year, y = diff_log_real_Elem_Educ_Total_Exp_pp, color = state))


```

#### Commuting Zones

```{r, echo = FALSE}

# Outliers

mines_restr %>%
  filter(year != 2001) %>%
  ggplot() +
  geom_line(aes(x = year, y = diff_log_real_Elem_Educ_Total_Exp_pp, color = unit)) +
  theme(legend.position = "none")

# mines_cz %>%
#   group_by(cz_id) %>%
#   mutate(across(diff_log_real_Elem_Educ_Total_Exp_pp, list(ma3 = ~rollmean(., 3, align = 'right', fill = NA),
#                                                            ma2 = ~rollmean(., 2, align = 'right', fill = NA)), .names = "{.fn}_{.col}")) %>%
#   ungroup %>%
#   left_join(., distinct(select(code_match, -unit)), multiple = "first", by = "cz_id") %>%
#   filter(year > 2003) %>%
#   ggplot() +
#   geom_line(aes(x = year, y = ma3_diff_log_real_Elem_Educ_Total_Exp_pp, color =  cz_id)) +
#   theme(legend.position = "none") +
#   facet_wrap(~state)


```

#### Counties

```{r, echo = FALSE}

# Outliers

pos_coefs <- mute_outliers(county_ed_coefs, "trend_cont_natl") %>%
  filter(var_muted != trend_cont_natl & var_muted > 0) %>%
  pull(unit) %>% unique

mines_restr %>%
  filter(unit %in% pos_coefs) %>%
  select(unit, year, log_real_Property_Tax_pp, log_real_Elem_Educ_Total_Exp_pp) %>%
  pivot_longer(!c(unit, year)) %>%
  ggplot(aes(x = year, y = value, color = name)) +
  geom_line() +
  facet_wrap(~unit, scales = "free")

```
:::

### Outliers

::: panel-tabset
#### Negative

```{r, echo = FALSE}

# Outliers
neg_coefs <- mute_outliers(county_ed_coefs, "trend_cont_natl") %>%
  filter(var_muted != trend_cont_natl & var_muted < 0) %>%
  pull(unit) %>% unique

if(length(neg_coefs) != 0){
mines_restr %>%
  filter(unit %in% neg_coefs) %>%
  select(unit, year, log_real_Property_Tax_pp, log_real_Elem_Educ_Total_Exp_pp) %>%
  pivot_longer(!c(unit, year)) %>%
  ggplot(aes(x = year, y = value, color = name)) +
  geom_line() +
  facet_wrap(~unit, scales = "free")
}

```

#### Positive

```{r, echo = FALSE}

# Outliers

pos_coefs <- mute_outliers(county_ed_coefs, "trend_cont_natl") %>%
  filter(var_muted != trend_cont_natl & var_muted > 0) %>%
  pull(unit) %>% unique

mines_restr %>%
  filter(unit %in% pos_coefs) %>%
  select(unit, year, log_real_Property_Tax_pp, log_real_Elem_Educ_Total_Exp_pp) %>%
  pivot_longer(!c(unit, year)) %>%
  ggplot(aes(x = year, y = value, color = name)) +
  geom_line() +
  facet_wrap(~unit, scales = "free")

```
:::
:::

## GDPPC

::: panel-tabset
### Mean of change-log

Mean change in log Real GDP (growth rate). The below plots show the coefficient estimate on the time-step variable in the trend equation. In the first panel I include no additional controls but in the latter two panels I include the state and national level growth rates as controls.

```{r, echo = FALSE, cache = TRUE}

natl_trend <- gdp_annual %>% 
  select(year, diff_log_gdp_natl) %>% 
  distinct %>% 
  lm(diff_log_gdp_natl ~ 1, data = .) %>% 
  .$coefficients %>% pluck(1)
  
county_trends = mines_restr %>% group_by(unit, state) %>% do(model = lm(diff_log_real_gdp_total ~ 1, data = .)) %>% ungroup 

county_trends_controlled_natl = mines_restr %>% 
  left_join(., gdp_annual, by = "year") %>% 
  group_by(unit, state) %>% 
  do(model = lm(diff_log_real_gdp_total ~ 1 + diff_log_gdp_natl, data = .)) %>% 
  ungroup 


county_trends_controlled_state = mines_restr %>% 
  left_join(., mines_state, by = c("year", "state")) %>% 
  group_by(unit, state) %>% 
  do(model = lm(diff_log_real_gdp_total.x ~ 1 + diff_log_real_gdp_total.y, data = .)) %>% 
  ungroup 

state_trends = mines_state %>% group_by(state) %>% do(model = lm(diff_log_real_gdp_total ~ 1, data = .)) %>% ungroup

state_trends_controlled_natl = mines_state %>% 
  left_join(., gdp_annual, by = "year") %>% 
  group_by(state) %>% 
  do(model = lm(diff_log_real_gdp_total ~ 1 + diff_log_gdp_natl, data = .)) %>% 
  ungroup

natl_trend = gdp_annual %>% do(model = lm(diff_log_gdp_natl ~ 1, data = .)) %>% pull(model) %>% first %>% .$coefficients %>% pluck(1)

county_trends <- county_trends %>% 
  rename("trend" = model) %>% 
  left_join(., county_trends_controlled_natl, by = c('unit', 'state')) %>% 
  rename("trend_cont_natl" = model) %>% 
  left_join(., county_trends_controlled_state, by = c('unit', 'state')) %>% 
  rename("trend_cont_state" = model)


state_trends <- state_trends %>%
  rename("trend" = model) %>%
  left_join(., state_trends_controlled_natl, by = c('state')) %>%
  rename("trend_cont_natl" = model)


county_coefs <- tibble()
for(k in 1:nrow(county_trends)){
  s <- county_trends %>% slice(k) %>% pull(unit)
  st <- county_trends %>% slice(k) %>% pull(state)
  t <- county_trends %>% slice(k) %>% 
    pull(trend) %>% first %>% .$coefficients %>% pluck(1) 
  t_n <- county_trends %>% slice(k) %>% 
    pull(trend_cont_natl) %>% first %>% .$coefficients %>% pluck(1) 
  t_s <- county_trends %>% slice(k) %>% 
    pull(trend_cont_state) %>% first %>% .$coefficients %>% pluck(1)
  
  county_coefs <- rbind(county_coefs, c(s,st, t, t_n, t_s))
}

colnames(county_coefs) <- names(county_trends)
county_coefs <- county_coefs %>% mutate(across(c(3:5), ~as.numeric(.)))

rm(county_trends)
rm(county_trends_controlled_natl)
rm(county_trends_controlled_state)


```

```{r, echo = FALSE, cache = TRUE}

county_trends_pc = mines_restr %>% 
  group_by(unit, state) %>% 
  do(model = lm(diff_log_real_gdp_total_pc ~ 1, data = .)) %>% ungroup

county_trends_controlled_natl_pc = mines_restr %>% 
  left_join(., gdp_annual, by = "year") %>% 
  group_by(unit, state) %>% 
  do(model = lm(diff_log_real_gdp_total_pc ~ 1 + diff_log_gdp_natl_pc, data = .)) %>% 
  ungroup 

county_trends_controlled_state_pc = mines_restr %>% 
  left_join(., mines_state, by = c("year", "state")) %>% 
  group_by(unit, state) %>% 
  do(model = lm(diff_log_real_gdp_total_pc.x ~ 1 + diff_log_real_gdp_total_pc.y, data = .)) %>% 
  ungroup 

state_trends_pc = mines_state %>% 
  group_by(state) %>% 
  do(model = lm(diff_log_real_gdp_total_pc ~ 1, data = .)) %>% 
  ungroup

state_trends_controlled_natl_pc = mines_state %>%
  left_join(., gdp_annual, by = "year") %>% 
  group_by(state) %>% 
  do(model = lm(diff_log_real_gdp_total_pc ~ 1 + diff_log_gdp_natl_pc, data = .)) %>% 
  ungroup

natl_trend_pc = gdp_annual %>% 
  select(year, diff_log_gdp_natl_pc) %>% 
  distinct %>% do(model = lm(diff_log_gdp_natl_pc ~ 1, data = .)) %>% 
  pull(model) %>% first %>% .$coefficients %>% pluck(1)

county_trends_pc <- county_trends_pc %>% 
  rename("trend_pc" = model) %>% 
  left_join(., county_trends_controlled_natl_pc, by = c('unit', 'state')) %>% 
  rename("trend_cont_natl_pc" = model) %>% 
  left_join(., county_trends_controlled_state_pc, by = c('unit', 'state')) %>% 
  rename("trend_cont_state_pc" = model)

county_coefs_pc <- tibble()
for(k in 1:nrow(county_trends_pc)){
  s <- county_trends_pc %>% slice(k) %>% pull(unit)
  st <- county_trends_pc %>% slice(k) %>% pull(state)
  t <- county_trends_pc %>% slice(k) %>% 
    pull(trend_pc) %>% first %>% .$coefficients %>% pluck(1) 
  t_n <- county_trends_pc %>% slice(k) %>% 
    pull(trend_cont_natl_pc) %>% first %>% .$coefficients %>% pluck(1) 
  t_s <- county_trends_pc %>% slice(k) %>% 
    pull(trend_cont_state_pc) %>% first %>% .$coefficients %>% pluck(1)
  
  county_coefs_pc <- rbind(county_coefs_pc, c(s,st, t, t_n, t_s))
}

colnames(county_coefs_pc) <- names(county_trends_pc)
county_coefs_pc <- county_coefs_pc %>% mutate(across(c(3:5), ~as.numeric(.)))

county_coefs_all <- county_coefs %>% 
  left_join(county_coefs_pc, by = c("unit", "state"))


state_trends_pc <- state_trends_pc %>%
  rename("trend_pc" = model) %>%
  left_join(., state_trends_controlled_natl_pc, by = c('state')) %>%
  rename("trend_cont_natl_pc" = model)


rm(county_trends_pc)
rm(county_trends_controlled_natl_pc)
rm(county_trends_controlled_state_pc)
rm(state_trends_controlled_natl_pc)


```

```{r, echo = FALSE, cache = TRUE, fig.height = 10}

# tplot <- county_coefs_all %>% 
#   select(-contains("pc")) %>% 
#   pivot_longer(cols = contains("trend")) %>% 
#   ggplot() +
#   geom_histogram(aes(x = value), bins = 100, fill = "darkgreen", alpha = 0.7) +
#   geom_vline(aes(xintercept = 0), colour = "grey", linetype = "dotted") +
#   geom_vline(aes(xintercept = natl_trend), colour = "red", linetype = "dashed") +
#   theme_bw() +
#   facet_wrap(factor(name,levels=c("trend", "trend_cont_state", "trend_cont_natl"), labels = c("Trend in GDP", "Trend in GDP Controlled for State Trends", "Trend in GDP Controlled for National Trends")) ~ ., ncol = 1) +
#     theme(legend.position = "none") +
#   labs(x = "Linear trend in Real GDP", y = "No. of Counties")

county_coefs_all %>% 
  pivot_longer(cols = contains("pc")) %>% 
  ggplot() +
  geom_histogram(aes(x = value), bins = 100, fill = "purple") +
  geom_vline(aes(xintercept = 0), colour = "grey", linetype = "dotted") +
  geom_vline(aes(xintercept = natl_trend_pc), colour = "red", linetype = "dashed") +
  theme_bw() +
  facet_wrap(factor(name,levels=c("trend_pc", "trend_cont_state_pc", "trend_cont_natl_pc"), labels = c("Trend in PC GDP", "Trend in PC GDP Controlled for State Trends", "Trend in PC GDP Controlled for National Trends")) ~ ., ncol = 1) +
  theme(legend.position = "none") +
  labs(x = "Linear trend in Real GDP PC", y = "No. of Counties")


```

```{r, echo = FALSE, cache = TRUE, fig.height = 14}
library(ggbrain)

if(unit_id == "fips"){
  county_coefs_temp <- county_coefs_all %>% 
    rename_with(~ unit_id, .cols = "unit")
  
  # Education Expenditure
  trend_plot_pc <- plot_usmap(data = county_coefs_temp, values = "trend_pc", regions = "counties", col = "gray90", linewidth = 0.01, exclude = c("AK", "HI")) +
  scale_fill_gradient2(na.value = "grey98", midpoint = 0) +
    #scale_fill_distiller(colours=c(bl,"white", re), name = "", direction = 1, na.value = "gray90", limits = c(-1, 1)) +
      theme(panel.background = element_rect(color = "white", fill = "white"),
          plot.title = element_text(face = "bold"), legend.background=element_blank()) +
      labs(title = "County-level Trend in Real GDP PC")
  
  # Education Expenditure
  trend_natl_plot_pc <- plot_usmap(data = county_coefs_temp, values = "trend_cont_natl_pc", regions = "counties", col = "gray90", linewidth = 0.01, exclude = c("AK", "HI")) +
  scale_fill_gradient2(na.value = "grey98", midpoint = 0) +
    #scale_fill_distiller(colours=c(bl,"white", re), name = "", direction = 1, na.value = "gray90", limits = c(-1, 1)) +
      theme(panel.background = element_rect(color = "white", fill = "white"),
          plot.title = element_text(face = "bold"), legend.background=element_blank()) +
      labs(title = "County-level Trend in Real GDP PC",
         subtitle = "Controlling for National Level GDP PC")
  
  # Education Expenditure
  trend_state_plot_pc <- plot_usmap(data = county_coefs_temp, values = "trend_cont_state_pc", regions = "counties", col = "gray90", linewidth = 0.01, exclude = c("AK", "HI")) +
  scale_fill_gradient2(na.value = "grey98", midpoint = 0) + 
    #scale_fill_distiller(colours=c(bl,"white", re), name = "", direction = 1, na.value = "gray90", limits = c(-1, 1)) +
      theme(panel.background = element_rect(color = "white", fill = "white"),
          plot.title = element_text(face = "bold"), legend.background=element_blank()) +
      labs(title = "County-level Trend in Real GDP PC",
         subtitle = "Controlling for State Level GDP PC")
  
  trend_plot_pc / trend_state_plot_pc / trend_natl_plot_pc
}

```

```{r, echo = FALSE, cache = TRUE}

state_coefs <- tibble()

for(k in 1:nrow(state_trends)){
  s <- state_trends %>% slice(k) %>% pull(state)

  t <- state_trends %>% slice(k) %>%
    pull(trend) %>% first %>% .$coefficients %>% pluck(1)

  t_n <- state_trends %>% slice(k) %>%
    pull(trend_cont_natl) %>% first %>% .$coefficients %>% pluck(1)

  state_coefs <- rbind(state_coefs, c(s,t, t_n))
}

colnames(state_coefs) <- names(state_trends)
state_coefs %>%
  mutate(across(contains("trend"), as.numeric)) %>% 
  tibble %>% 
  pivot_longer(!state) %>% 
  ggplot()+
  geom_histogram(aes(x = value, fill = name), bins = 15, position = "identity", alpha  = 0.7) +
  geom_vline(aes(xintercept = 0), color = "magenta", linetype = "dotted") +
  scale_fill_brewer(palette = "Set2") +
  labs(title = "Histogram of State-level Trend Coefficient: (log) Real GDP")

```

### Outliers

The following isoltes those counties that have significant negative or positive trend values. 
::: panel-tabset
#### Negative

```{r, echo = FALSE}

# Outliers
neg_coefs <- mute_outliers(county_ed_coefs, "trend_cont_natl") %>% 
  filter(var_muted != trend_cont_natl & var_muted < 0) %>% 
  pull(unit) %>% unique

if(length(neg_coefs) != 0){
  mines_restr %>%
    filter(unit %in% neg_coefs) %>%
    select(unit, year, log_real_gdp_priv_ind_pc, log_real_Property_Tax_pp, log_real_Elem_Educ_Total_Exp_pp) %>% 
    pivot_longer(!c(unit, year)) %>% 
    ggplot(aes(x = year, y = value, color = name)) +
    geom_line() +
    facet_wrap(~unit, scales = "free")
}
```

#### Positive

```{r, echo = FALSE}

# Outliers

pos_coefs <- mute_outliers(county_coefs_all, "trend_cont_natl") %>% 
  filter(var_muted != trend_cont_natl & var_muted > 0) %>% 
  pull(unit) %>% unique

mines_restr %>%
  filter(unit %in% pos_coefs) %>%
  select(unit, year, log_real_gdp_priv_ind_pc, log_real_Property_Tax_pp, log_real_Elem_Educ_Total_Exp_pp) %>% 
  pivot_longer(!c(unit, year)) %>% 
  ggplot(aes(x = year, y = value, color = name)) +
  geom_line() +
  facet_wrap(~unit, scales = "free")


```
:::
:::
:::

## Supplementary Materials

1.  National data on GDP, UER, (and poverty)

```{r, echo = FALSE, cache = TRUE}

macro_natl %>% 
  select(-FD_UNRATE, -contains("GDPC1")) %>%
  mutate(GDP = GDP/10,
         UNRATE = UNRATE*100) %>%
  pivot_longer(cols = c(UNRATE, GDP, FD_GDP)) %>%
  filter(!is.na(value)) %>% 
  ggplot() +
  geom_line(aes(x = DATE, y = value)) +
  facet_wrap(~name, ncol = 1, scales = "free") +
  theme_minimal() +
  scale_x_date(limits = as.Date(c('2000-01-01','2022-01-01')))
  
```

```{r, echo = FALSE}

# library(covFactorModel)
# iX <- mines_restr %>% 
#   select(unit, year, real_gdp_total) %>% 
#   pivot_wider(names_from = "unit", values_from = "real_gdp_total") %>% 
#   mutate(year=as_date(year))
# 
# z <- read.zoo(iX, format = "%Y/%m/%d")
# x <- as.xts(z)
# 
# X <- xts(iX, order.by = as_date(iX$year))
# natl_gdp <- xts(gdp_annual[,-1], order.by=as_date(gdp_annual[,1]))
# 
# factor_model <- factorModel(xts(iX, order.by = as_date(iX$year)), type = "M", econ_fact = natl_gdp)
# cbind(alpha = factor_model$alpha, beta = factor_model$beta)

```

2.  State data on GDP, UER, and poverty

3.  Extract trends of state and national data

```{r, echo = FALSE, cache = TRUE}

county_gdp <- readRDS(here("data/temp/gdp_controls.RDS")) %>%
  mutate(across(contains("mining"), ~ifelse(is.na(.), 0, .))) %>%
  select(year, fips, real_gdp_total, real_gdp_priv_ind)

# county_gdp %>%
#   group_by(unit) %>%
#   mutate(across(c(real_gdp_total, real_gdp_priv_ind), list(ma5 = ~rollmean(., 5, align = 'right', fill = NA),
#                                                            ma3 = ~rollmean(., 3, align = 'right', fill = NA),
#                                                            ma2 = ~rollmean(., 2, align = 'right', fill = NA)),
#          .names = "{.fn}_{.col}"))


```

4.  Deviations at county level from national and state-level trends

5.  Plot deviations

6.  Saturation to find structural breaks in these deviations

Result: UE, GDP, and Poverty gaps

7.  PCA on those three gaps

8.  Retain index from PCA

9.  Step break in index

10. Line up with any notable events?

11. Place "gaps" in a panel structure for break detection

12. Autocorrelation plot to test no residual autocorrelation in model above with PCA indices.

```{r, echo = FALSE, cache = TRUE}

county_gdp %>% 
  ggplot() 

county_gdp %>% 
  ggplot() 

county_gdp %>% 
  ggplot() 

county_gdp %>% 
  ggplot() 

```



### Cointegration testing

Suggestions from Jennie:

Engle-Granger Test - bivariate scenario

Johanson Test - multivariate setting \[GDP, Property Taxes, Ed. Spending\]

### Autocorrelation

First-differences

```{r, echo = FALSE, cache = TRUE}

state_list <- unique(mines_state$state)

acf_list <- list()

for(s in 1:length(state_list)){

  ps <- mines_state %>%
    filter(state == state_list[s]) %>%
    pull(diff_real_gdp_priv_ind) %>%
    acf(., na.action = na.pass, plot = FALSE)
  acf_list[[s]] <- ps

}

acf_list[[1]] %>% plot
acf_list[[10]] %>% plot
acf_list[[15]] %>% plot
acf_list[[30]] %>% plot

```

-   Autocorrelation (Education only) (X)

-   Correlation plots (X)

-   Cross-correlation plot of Education and GDP (X)

-   Are GDP and Education Expenditure cointegrating (or do they exhibit a decoupling?) (\_)

### Autocorrelation

First-differences

```{r, echo = FALSE, cache = TRUE}

state_list <- unique(mines_state$state)

acf_list <- list()

for(s in 1:length(state_list)){
  ps <- mines_state %>%
    filter(state == state_list[s]) %>%
    pull(diff_real_Elem_Educ_Total_Exp) %>%
    acf(., na.action = na.pass, plot = FALSE)
  acf_list[[s]] <- ps

}

acf_list[[1]] %>% plot
acf_list[[10]] %>% plot
acf_list[[15]] %>% plot
acf_list[[30]] %>% plot

```

### Correlation Plots (Education and GDP)

```{r, fig.height = 10, echo = FALSE, cache = TRUE}

ggplot(mines_state,
       aes(x= real_gdp_priv_ind,
           y= real_Elem_Educ_Total_Exp))+
  geom_point()+
  facet_wrap(~state, scales = "free") +
  geom_smooth(fill="blue", alpha=0.1)+
  geom_smooth(method='lm', formula= y~x, se=FALSE, col="red",lty=2)+
  theme(axis.text.y = element_blank(),
        axis.ticks.y = element_blank(),
        axis.text.x = element_blank(),
        axis.ticks.x = element_blank())+
    labs(title = "Correlation Plot of Elementary Ed. Expenditure and Private Industry GDP",
       subtitle = "in real USD by state",
       y = "Elem. Ed. Exp",
       x = "Priv. Ind. GDP")

```

### Cross-correlation of Educ Exp and Priv. Industry GDP

```{r, echo = FALSE, cache = TRUE}

for(s in 1:length(state_list[1:6])){
  gdp_var <- mines_state %>%
    filter(year != 2001) %>% 
    filter(state == state_list[s]) %>%
    pull(diff_real_gdp_priv_ind)
  
  elem_ed_var <- mines_state %>%
    filter(year != 2001) %>% 
    filter(state == state_list[s]) %>%
    pull(diff_real_Elem_Educ_Total_Exp)
  
  cor(gdp_var, elem_ed_var)

  ccf(as.numeric(gdp_var), as.numeric(elem_ed_var)) %>% print
  cor(as.numeric(gdp_var), as.numeric(elem_ed_var), method = c("pearson", "kendall", "spearman"))
  cor.test(as.numeric(gdp_var), as.numeric(elem_ed_var), method=c("pearson", "kendall", "spearman"))
  
}

#aTSA::coint.test(Deathts, VAXts, d = 1, nlag = 2, output = TRUE)

# cor(x, y, method = c("pearson", "kendall", "spearman"))
# cor.test(x, y, method=c("pearson", "kendall", "spearman"))

```


