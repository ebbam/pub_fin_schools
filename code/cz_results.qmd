---
title: "Descriptive Analysis & Preliminary Results"
format: 
  html:
    embed-resources: true
    theme: cosmo
    toc: true
    toc_float: true
    toc-expand: 3
    toc-depth: 4
    toc-location: left
editor_options: 
  chunk_output_type: inline
---

# Introduction

The following document summarises the progress made thus far on Chapter 1: Local Fiscal Risks of Decarbonisation of my DPhil. The work aims to pursue a better understanding of how industrial transformation impacts local well-being. From an original interest in looking at all aspects of local public finance, the project has narrowed to focus on expenditure on public education and its connection to industrial prosperity and transformation.

Below, I provide some descriptive statistics and figures about the data as well as some preliminary efforts to explore the trends in these values. 

*The main research question is: How does industrial transformation/activity impact county-level expenditure on public education?*



```{r, echo = FALSE, message = FALSE}

rm(list = ls())

knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)

library(tidyverse)
library(conflicted)
library(stargazer)
library(sf)
library(zoo)
library(tidycensus)
library(here)
library(viridis)
library(datasets)
library(broom)
library(fixest)
library(readxl)
library(ggrepel)
library(plm)
library(ggbreak)
library(getspanel)
library(usmap)
library(gridExtra)
library(kableExtra)
library(patchwork)
library(lattice)
library(lubridate)
library(stringr)
library(xts)
library(urca)
library(dynlm)
library(tseries)
library(quantmod)
library(lmtest)
library(sandwich)
library(vars)
library(ggridges)
library(grid)
library(ggplotify)

conflict_prefer_all("dplyr", quiet = TRUE)

source(here('code/source_code/useful_functions.R'))
source(here('code/source_code/dicts.R'))

```


## CZ-level Education Expenditure

::: panel-tabset
### Data

```{r, echo = FALSE, message = FALSE, warnings = FALSE, fig.height = 10, include = FALSE}

mines_restr <- readRDS(here("data/out/regression_data_complete_fips.RDS")) 

```

```{r, echo = FALSE, warning = FALSE, message = FALSE}

# Relevant vars for trend analysis below
# Should be central place to add more vars if necessary
vars_grab <- c("real_gdp_priv_ind",
               "real_gdp_total",
               "real_Elem_Educ_Total_Exp", 
               "real_Total_Educ_Total_Exp",
               "real_Property_Tax", 
               "real_Total_Revenue",
               "real_Total_Fed_IG_Revenue",
               "real_Total_State_IG_Revenue",
               "real_Total_IG_Revenue",
               "real_Tot_Local_IG_Rev",
               "real_Total_Rev_Own_Sources",
               "Enrollment", 
               "pop_total")

vars_grab_restr <- c("real_gdp_priv_ind",
                     "real_gdp_priv_ind_pc",
               "real_gdp_total",
               "real_gdp_total_pc",
               "real_Elem_Educ_Total_Exp",
               "real_Elem_Educ_Total_Exp_pp",
               "real_Total_Educ_Total_Exp",
               "real_Total_Educ_Total_Exp_pp",
               "real_Property_Tax", 
               "real_Property_Tax_pp", 
               "real_Total_Revenue",
               "real_Total_Fed_IG_Revenue",
               "real_Total_IG_Revenue",
               "real_Total_State_IG_Revenue",
               "real_Tot_Local_IG_Rev",
               "real_Total_Rev_Own_Sources",
               "Enrollment", 
               "pop_total")

mines_tots <- mines_restr %>% 
  #mutate(across(c(vars_grab_restr, paste0("log_", vars_grab_restr)), ~. - dplyr::lag(., 1), .names = "diff_{.col}")) %>% 
  group_by(year) %>% 
  mutate(natl_pop = sum(pop_total, na.rm = TRUE)) %>% 
  ungroup

mines_cz <- readRDS(here("data/out/cz_dataset.RDS"))
mines_cz_1990 <- readRDS(here("data/out/cz_1990_dataset.RDS"))

## Summarise to State Level
mines_state <- mines_tots %>%
  select(state_name, fips, cz_id, year, fips, vars_grab) %>% 
  group_by(state_name, year) %>%
  summarise(across(vars_grab, ~sum(., na.rm = TRUE)),
            n_fips = n_distinct(fips),
            n_cz = n_distinct(cz_id)) %>% 
  ungroup %>% 
  mutate(real_Elem_Educ_Total_Exp_pp = real_Elem_Educ_Total_Exp/Enrollment,
         real_Total_Educ_Total_Exp_pp = real_Total_Educ_Total_Exp/Enrollment,
         real_gdp_priv_ind_pc = real_gdp_priv_ind/pop_total,
         real_gdp_total_pc = real_gdp_total/pop_total,
         real_Property_Tax_pp = real_Property_Tax/Enrollment,
         across(!c(state_name, year, n_fips, n_cz), ~log(.), .names = "log_{.col}"),
         across(!c(state_name, year, n_fips, n_cz), ~. - dplyr::lag(., 1), .names = "diff_{.col}"),
         time = year - 2000)
      
## Summarise to natl level
mines_natl <- mines_tots %>%
  select(state_name, fips, cz_id, year, fips, vars_grab) %>% 
  group_by(year) %>%
  summarise(across(vars_grab, ~sum(., na.rm = TRUE)),
            n_fips = n_distinct(fips),
            n_cz = n_distinct(cz_id),
            n_state = n_distinct(state_name)) %>% 
  ungroup %>% 
  mutate(real_Elem_Educ_Total_Exp_pp = real_Elem_Educ_Total_Exp/Enrollment,
         real_Total_Educ_Total_Exp_pp = real_Total_Educ_Total_Exp/Enrollment,
         real_gdp_priv_ind_pc = real_gdp_priv_ind/pop_total,
         real_gdp_total_pc = real_gdp_total/pop_total,
         real_Property_Tax_pp = real_Property_Tax/Enrollment,
         across(!c(year, n_fips, n_cz, n_state), ~log(.), .names = "log_{.col}"),
         across(!c(year, n_fips, n_cz, n_state,), ~. - dplyr::lag(., 1), .names = "diff_{.col}"),
         time = year - 2000,
         id = "USA")

mean_df <- mines_tots %>% 
  group_by(year) %>%
             summarise(real_Total_Educ_Total_Exp = mean(real_Total_Educ_Total_Exp, na.rm = TRUE),
                       real_Total_Educ_Total_Exp_pp = mean(real_Total_Educ_Total_Exp_pp, na.rm = TRUE),
                       log_real_Total_Educ_Total_Exp = mean(log_real_Total_Educ_Total_Exp, na.rm = TRUE),
                       log_real_Total_Educ_Total_Exp_pp = mean(log_real_Total_Educ_Total_Exp_pp, na.rm = TRUE))

mean_df_cz <- mines_cz %>% 
  group_by(year) %>%
             summarise(real_Total_Educ_Total_Exp = mean(real_Total_Educ_Total_Exp, na.rm = TRUE),
                       real_Total_Educ_Total_Exp_pp = mean(real_Total_Educ_Total_Exp_pp, na.rm = TRUE),
                       log_real_Total_Educ_Total_Exp = mean(log_real_Total_Educ_Total_Exp, na.rm = TRUE),
                       log_real_Total_Educ_Total_Exp_pp = mean(log_real_Total_Educ_Total_Exp_pp, na.rm = TRUE))

lister = list("cz_id" = mines_cz, "fips" = mines_restr) #"fips" = mines_restr, 

```

Overall, expenditure on education per pupil has increased slightly in real USD.
```{r, echo = FALSE, message = FALSE, warnings = FALSE}

for(k in names(lister)){
  pp1 <- lister[[k]] %>% 
    mutate(panel = case_when(year %in% 2000:2003 ~ "2000-2003",
                             year %in% 2004:2007 ~ "2004-2007", 
                             year %in% 2008:2011 ~ "2008-2011", 
                             year %in% 2012:2015 ~ "2012-2015", 
                             year %in% 2016:2021 ~ "2016-2021")) %>% 
    ggplot(aes(x = log_real_Total_Educ_Total_Exp_pp, y = as.factor(year), fill = year)) +
    geom_density_ridges(alpha = 0.7) +
    theme_minimal() + 
    scale_fill_viridis() +
    theme(legend.position = "none") +
    scale_y_discrete(limits = rev(levels(as.factor(lister[[k]]$year)))) +
    labs(title = paste0("(", k,") ", "log Education Expenditure pp"), y = "Year", x = "(log) Total Education Expenditure per Pupil (Real USD)")
  
  pp2 <- lister[[k]] %>% 
    filter(year > 2000) %>% 
    ggplot(aes(x = log_real_gdp_total_pc, y = as.factor(year), fill = year)) +
    geom_density_ridges(alpha = 0.7) +
    theme_minimal() + 
    scale_fill_viridis(option = "plasma") +
    theme(legend.position = "none") +
    scale_y_discrete(limits = rev(levels(as.factor(lister[[k]]$year)))) +
    labs(title = paste0("(", k,") ", "log GDP pc per year"), y = "Year", x = "(log) GDP per Capita")
  
  
  print(pp1 + pp2)
}

```

The following plot displays each county's time series of expenditure (total and per pupil log values). 

```{r, echo = FALSE, message = FALSE, warnings = FALSE, fig.height = 6}

for(k in names(lister)){
  log_tot <- lister[[k]] %>% 
    ggplot() +
    geom_line(aes(x = year, y = log_real_Total_Educ_Total_Exp, group = get(k)), alpha = 0.3) +
    #geom_line(data = mean_df, aes(x = year, y = log_real_Total_Educ_Total_Exp), linewidth = 1) + 
    labs(x = "Year", y = "Total County-level Education Expenditure (log)", title = paste0("(", k,") ", "Total (log) Expenditure")) + 
    theme(legend.position = "none")

  log_pp <- lister[[k]]  %>% ggplot() +
    geom_line(aes(x = year, y = log_real_Total_Educ_Total_Exp_pp, group = get(k)), alpha = 0.3) +
    #geom_line(data = mean_df, aes(x = year, y = log_real_Total_Educ_Total_Exp_pp)) + 
    labs(x = "Year", y = "Total County-level Education Expenditure Per Pupil (log)", title = paste0("(", k,") ", "Total (log) Expenditure Per Pupil")) +  
    theme(legend.position = "none")

  print(log_tot + log_pp)
}

```


### Key Relationships (KR)

Below are scatterplots and diagrams depicting key relationships between dependent and control variables as well as shares/components of key variables.

::: panel-tabset

#### KR 1: Revenue Sources

Most important to tease out before modelling is how different revenue sources (federal, state, county (own), and other local sources) interplay. County-level revenue for public education is a combination of both local and intergovernmental sources. The local portion of the share is almost entirely sourced through property taxes. The intergovernmental sources come from state, federal, and local aid.

Below chart plots CZ-level mean (taken over the panel time horizon) of different intergovernmental (IG) sources versus own-source revenue (generated from local sources). The solid black line represents a best-fit line and the dashed line represents a 45 degree line. The blue plot shows Total IG Revenue (Federal + State + Other Local) versus own revenue. There is a near-1:1 negative correlation between the two (ie. they are near-substitutes for one another). This effect is dominated by State IG revenue (as can be seen in the purple panel). Propoerty taxes have a near 1:1 relationship with own revenue confirming that property taxes make up own revenue sources almost completely. 

```{r, echo = FALSE, message = FALSE}

for(k in names(lister)){
  tots <- lister[[k]] %>% 
    group_by(get(k)) %>% 
    summarise(across(c(log_real_Total_Rev_Own_Sources_pp, log_real_Total_IG_Revenue_pp), ~mean(., na.rm = TRUE)))  %>% 
    ggplot(aes(x = log_real_Total_Rev_Own_Sources_pp, y = log_real_Total_IG_Revenue_pp)) +
    geom_jitter(colour = "blue") +
    geom_smooth(method=lm, colour = "black") +
    labs(title = "Total IG Revenue pp vs Own Rev. pp") +
    geom_abline(slope = 1, intercept = 0, linetype = "dashed") +
    theme(title = element_text(size = 9))


  fed <- lister[[k]] %>% 
    group_by(get(k)) %>% 
    summarise(across(c(log_real_Total_Rev_Own_Sources_pp, log_real_Total_Fed_IG_Revenue_pp), ~mean(., na.rm = TRUE)))  %>% 
    ggplot(aes(x = log_real_Total_Rev_Own_Sources_pp, y = log_real_Total_Fed_IG_Revenue_pp)) +
    geom_jitter(colour = "magenta") +
      geom_smooth(method=lm, colour = "black") +
    labs(title = "Federal IG Revenue pp vs Own Rev. pp") +
    geom_abline(slope = 1, intercept = 0, linetype = 'dashed') +
    theme(title = element_text(size = 9),
          legend.position = "none")
  
  state <- lister[[k]] %>% 
    group_by(get(k)) %>% 
    summarise(across(c(log_real_Total_Rev_Own_Sources_pp, log_real_Total_State_IG_Revenue_pp), ~mean(., na.rm = TRUE)))  %>% 
    ggplot(aes(x = log_real_Total_Rev_Own_Sources_pp, y = log_real_Total_State_IG_Revenue_pp)) +
    geom_jitter(colour = "purple") +
      geom_smooth(method=lm, colour = "black") +
    labs(title = "State IG Revenue pp vs Own Rev. pp", size = 10) + 
    geom_abline(slope = 1, intercept = 0, linetype = "dashed") +
    theme(title = element_text(size = 9),
          legend.position = "none")
  
  taxes <- lister[[k]] %>% 
    group_by(get(k)) %>% 
    summarise(across(c(log_real_Total_Rev_Own_Sources_pp, log_real_Property_Tax_pp), ~mean(., na.rm = TRUE)))  %>% 
    ggplot(aes(x = log_real_Total_Rev_Own_Sources_pp, y = log_real_Property_Tax_pp)) +
    geom_jitter(colour = "darkgreen") +
      geom_smooth(method=lm, colour = "black") +
    labs(title = "Property Taxes pp vs Own Rev. pp", size = 10) + 
    geom_abline(slope = 1, intercept = 0, linetype = "dashed") +
    theme(title = element_text(size = 9),
          legend.position = "none")
  
  print((tots + fed) / (state + taxes) + plot_annotation(k, theme=theme(plot.title=element_text(hjust=0.5))))
}



```

The following plots show the share of revenue for public education that comes from own sources, local intergovernmental, state intergovernmental, and federal intergovernmental by state. Almost all states have a near 50% split of revenue from state and own sources, which aligns with data from the Congressional Research Service cited in the Transfer of Status report. Massachusetts has an unusually high share of local IG support (inter-school aid), eclipsing own sources almost completely. From further research, I believe this has to do with a unique structure of Massachusetts public school funding which is reliant on several multi-county funding agencies (similar to the mentioned ESAs). This anomaly might warrant the exclusion of MA from the analysis.

```{r, echo = FALSE, message = FALSE, fig.height = 12, include = FALSE}

state_df <- mines_restr %>% 
  group_by(state, year) %>% 
  summarise(across(c(Enrollment, real_Total_Educ_Total_Exp, real_Elem_Educ_Total_Exp, real_Total_Revenue, real_Total_Rev_Own_Sources, real_Total_Fed_IG_Revenue, real_Total_State_IG_Revenue, real_Tot_Local_IG_Rev, real_Total_Taxes, real_Property_Tax), ~sum(., na.rm = TRUE))) %>% ungroup

state_df$state_name = sapply(state_df$state, get_state) 
state_df$region = sapply(state_df$state_name, get_region)

state_df <- state_df %>% 
  relocate(state_name, region, .after = state) 

state_shares <- state_df %>% 
  dplyr::select(year, state_name, real_Total_Rev_Own_Sources, real_Total_Fed_IG_Revenue, real_Total_State_IG_Revenue, real_Tot_Local_IG_Rev) %>% 
  pivot_longer(cols = !c(year, state_name), names_to = "Source", values_to = "Revenue") %>%
  rename("Year" = year)  %>% 
  ggplot(aes(x = Year, y = Revenue, group = Source, fill = Source)) +
  scale_fill_viridis(discrete = T)+
  geom_area(colour = "white", position = "fill", alpha = 0.8) + 
  geom_line(aes(x = Year, y = 0.5), linewidth = 0.1, linetype = "dashed") +
  facet_wrap(~state_name, ncol = 6) +
  theme(legend.position = "bottom",
        panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank(),
        plot.background = element_blank(),
        axis.text.x = element_blank(),
        axis.ticks.x = element_blank(),
        axis.text.y = element_blank(),
        axis.ticks.y = element_blank()) +
  labs(title = "Share of Revenue from Federal, State, Local Sources by State") +
  xlab("Year") +
  ylab("Share of Total Revenue") +
  guides(fill=guide_legend(nrow=2)) +
  #scale_y_continuous(breaks=seq(0,1,by=1)) +
  #scale_x_continuous(breaks = c(2000, 2021)) +
  guides(fill=guide_legend(nrow=2))

state_shares
#ggsave(here("output/plots/state_shares_of_revenue_by_source.jpg"), width = 20, height = 20, units = "cm")

```

```{r, echo = FALSE, message = FALSE}

states_plots <- state_df %>% pull(state_name) %>% unique

state_shares1 <- state_df %>% 
  filter(state_name %in% states_plots[1:15]) %>% 
  dplyr::select(year, state_name, real_Total_Rev_Own_Sources, real_Total_Fed_IG_Revenue, real_Total_State_IG_Revenue, real_Tot_Local_IG_Rev) %>% 
  pivot_longer(cols = !c(year, state_name), names_to = "Source", values_to = "Revenue") %>%
  rename("Year" = year)  %>% 
  ggplot(aes(x = Year, y = Revenue, group = Source, fill = Source)) +
  scale_fill_viridis(discrete = T, option  = "turbo")+
  geom_area(position = "fill", alpha = 0.8) + 
  geom_line(aes(x = Year, y = 0.5), linewidth = 0.1, linetype = "dashed") +
  facet_wrap(~state_name, ncol = 5) +
  theme(legend.position = "none", 
        panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank(),
        plot.background = element_blank(),
        axis.text.x = element_blank(),
        axis.ticks.x = element_blank(),
        axis.text.y = element_blank(),
        axis.ticks.y = element_blank(),
        axis.title.y = element_blank(),
        axis.title.x = element_blank()) +
  #labs(title = "Share of Revenue from Federal, State, Local Sources by State", xlab = "Year", ylab = "Share of Total Revenue") +
  guides(fill=guide_legend(nrow=2)) +
  #scale_y_continuous(breaks=seq(0,1,by=1)) +
  #scale_x_continuous(breaks = c(2000, 2021)) +
  guides(fill=guide_legend(nrow=2))

state_shares2 <- state_df %>% 
  filter(!(state_name %in% states_plots[1:15])) %>% 
  dplyr::select(year, state_name, real_Total_Rev_Own_Sources, real_Total_Fed_IG_Revenue, real_Total_State_IG_Revenue, real_Tot_Local_IG_Rev) %>% 
  pivot_longer(cols = !c(year, state_name), names_to = "Source", values_to = "Revenue") %>%
  rename("Year" = year)  %>% 
  ggplot(aes(x = Year, y = Revenue, group = Source, fill = Source)) +
  scale_fill_viridis(discrete = T, , option  = "turbo", breaks=c("Tot_Local_IG_Rev", "Total_Fed_IG_Revenue", "Total_Rev_Own_Sources", "Total_State_IG_Revenue"),
                       labels=c("Local Intergovernmental Revenue", "Federal Intergovernmental Revenue", "Revenue from Own Sources", "State Intergovernmental Revenue"))+
  geom_area(position = "fill", alpha = 0.8) + 
  geom_line(aes(x = Year, y = 0.5), linewidth = 0.1, linetype = "dashed") +
  facet_wrap(~state_name, ncol = 9) +
  theme(legend.position = "bottom", 
        panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank(),
        plot.background = element_blank(),
        axis.text.x = element_blank(),
        axis.ticks.x = element_blank(),
        axis.text.y = element_blank(),
        axis.ticks.y = element_blank(),
        axis.title.y = element_blank(),
        axis.title.x = element_blank()) +
  #labs(title = "Share of Revenue from Federal, State, Local Sources by State", xlab = "Year", ylab = "Share of Total Revenue") +
  guides(fill=guide_legend(nrow=2)) +
  #scale_y_continuous(breaks=seq(0,1,by=1)) +
  #scale_x_continuous(breaks = c(2000, 2021)) +
  guides(fill=guide_legend(nrow=2))

```

The below plot provides the same information as above but on a national level.

**Conclusion: Corroborates the near-even split of revenue between state and own sources which seems to be a fact of public education revenue. I mainly include this as an alternative summarising figure to the above.**

```{r, echo = FALSE, fig.height = 8}

natl_df <- mines_restr %>% 
  group_by(year) %>% 
  summarise(across(c(Enrollment, real_Total_Educ_Total_Exp, real_Elem_Educ_Total_Exp, real_Total_Revenue, real_Total_Rev_Own_Sources, real_Total_IG_Revenue, real_Total_Fed_IG_Revenue, real_Total_State_IG_Revenue, real_Tot_Local_IG_Rev, real_Total_Taxes, real_Property_Tax), ~sum(., na.rm = TRUE))) %>% ungroup %>% mutate(across(real_Total_Educ_Total_Exp:last_col(), ~./Enrollment, .names = "{.col}_pp"))

natl_shares <- natl_df %>% 
  dplyr::select(year, real_Total_Rev_Own_Sources, real_Total_Fed_IG_Revenue, real_Total_State_IG_Revenue, real_Tot_Local_IG_Rev) %>% 
  pivot_longer(cols = !year, names_to = "Source", values_to = "Revenue") %>%
  ggplot(aes(x = year, y = Revenue, group = Source, fill = Source)) +
  scale_fill_viridis(discrete = T, option  = "turbo")+
  geom_area(position = "fill") + 
  geom_line(aes(x = year, y = 0.5), linewidth = 0.1, linetype = "dashed") +
    xlab("Year") +
  ylab("Share of Total Revenue") +
  theme_minimal() +
  theme(legend.position = "none", plot.background = element_blank(),
    panel.grid.major = element_blank(),
    panel.grid.minor = element_blank()) +
  guides(fill=guide_legend(nrow=2)) +
  scale_y_continuous(breaks=seq(0,1,by=0.5))


(natl_shares + state_shares1)/state_shares2

#ggsave(here("output/plots/natl_shares_of_revenue_by_source.jpg"), g, width = 20, height = 25, units = "cm")

```



#### KR 2: Revenue, Expenditure and Property Taxes

We know the majority of "own source" revenue comes from property taxes. The below scatterplots demonstrate the relationship between education revenue and expeniture versus property taxes collected. The solid black line represents a best-fit line and the dashed line represents a 45 degree line (intercept-adjusted to match data). The vertical dotted line represents a potential preliminary cutoff point for outliers - will be subject to further more rigorous testing.

```{r, echo = FALSE, message = FALSE, warnings = FALSE}

for(k in names(lister)){
  
  tot_rev <- lister[[k]] %>% 
    ggplot(aes(x = log_real_Property_Tax, y = log_real_Total_Rev_Own_Sources)) +
    geom_jitter(, colour = "deeppink2", alpha = 0.5) + 
    geom_smooth(method=lm, colour = "black") +
    geom_abline(slope = 1, linetype = "dashed") +
    labs(x = "log Property Taxes Collected", y = "log Revenue Own Sources") 


  pp_rev <- lister[[k]] %>% 
    ggplot(aes(x = log_real_Property_Tax_pp, y = log_real_Total_Rev_Own_Sources_pp)) +
    geom_jitter(, colour = "deeppink2", alpha = 0.5) + 
    geom_smooth(method=lm, colour = "black") +
    geom_abline(slope = 1, linetype = "dashed") +
    geom_vline(xintercept = 4, linetype = "dotted") +
    labs(x = "log Property Taxes Collected pp", y = "log Revenue Own Sources pp") 
  
  
  tot <- lister[[k]] %>% 
    ggplot(aes(x = log_real_Property_Tax, y = log_real_Total_Educ_Total_Exp)) +
    geom_jitter(, colour = "cyan3", alpha = 0.5) + 
    geom_smooth(method=lm, colour = "black") +
    geom_abline(slope = 1, linetype = "dashed") +
    labs(x = "log Property Taxes Collected", y = "log Education Expenditure") 
  
  
  pp <- lister[[k]] %>% 
    ggplot(aes(x = log_real_Property_Tax_pp, y = log_real_Total_Educ_Total_Exp_pp)) +
    geom_jitter(, colour = "cyan3", alpha = 0.5) + 
    geom_smooth(method=lm, colour = "black") +
    geom_abline(slope = 1, linetype = "dashed") +
    geom_vline(xintercept = 4, linetype = "dotted") +
    labs(x = "log Property Taxes Collected pp", y = "log Education Expenditure pp") 
  
  print((tot_rev + pp_rev) / (tot + pp) + plot_annotation(k, theme=theme(plot.title=element_text(hjust=0.5))))

}



```

#### KR 3: GDP and Property Taxes

The solid black line represents a best-fit line and the dashed line represents a 45 degree line.

GDP and Property taxes have a positive linear correlation, to be expected.

```{r, echo = FALSE, message = FALSE, warnings = FALSE}

for(k in names(lister)){
  
  tot_log <- lister[[k]] %>% 
    ggplot(aes(x = log_real_gdp_total, y = log_real_Property_Tax)) +
    geom_jitter(, colour = "steelblue", alpha = 0.5) + 
    geom_smooth(method=lm, colour = "black") +
      geom_abline(slope = 1, intercept = 0, linetype = "dashed") +
    labs(x = "log GDP", y = "log Property Taxes Collected") +
    theme_minimal()
  
  tot_log_pp <- lister[[k]] %>% 
    ggplot(aes(x = log_real_gdp_total_pc, y = log_real_Property_Tax_pp)) +
    geom_jitter(, colour = "darkorchid", alpha = 0.5) + 
    geom_smooth(method=lm, colour = "black") +
        geom_abline(slope = 1, intercept = 0, linetype = "dashed") +
    labs(x = "log GDP pc", y = "log Property Taxes Collected pp") +
    theme_minimal()
  
  priv_ind_log <- lister[[k]] %>% 
    ggplot(aes(x = log_real_gdp_priv_ind, y = log_real_Property_Tax)) +
    geom_jitter(, colour = "steelblue", alpha = 0.5) + 
    geom_smooth(method=lm, colour = "black") +
      geom_abline(slope = 1, intercept = 0, linetype = "dashed") +
    labs(x = "log Private Industry GDP", y = "log Property Taxes Collected") +
    theme_minimal()
  
  priv_ind_log_pp <- lister[[k]] %>% 
    ggplot(aes(x = log_real_gdp_priv_ind_pc, y = log_real_Property_Tax_pp)) +
    geom_jitter(, colour = "darkorchid", alpha = 0.5) + 
    geom_smooth(method=lm, colour = "black") +
        geom_abline(slope = 1, intercept = 0, linetype = "dashed") +
    labs(x = "log Private Industry GDP pc", y = "log Property Taxes Collected pp") +
    theme_minimal()
  
  print((tot_log + tot_log_pp) / (priv_ind_log + priv_ind_log_pp) + plot_annotation(k, theme=theme(plot.title=element_text(hjust=0.5))))
      
}



```

#### KR 4: GDP and Education Expenditure

The solid black line represents a best-fit line and the dashed line represents a 45 degree line (intercept-adjusted to match data).

GDP and Education expenditure have a positive linear correlation, as expected.

```{r, echo = FALSE, message= FALSE, warnings = FALSE}

for(k in names(lister)){

  tot <- lister[[k]] %>%
    ggplot(aes(x = log_real_gdp_total, y = log_real_Total_Educ_Total_Exp)) +
    geom_jitter(, colour = "brown", alpha = 0.5) +
    geom_smooth(method=lm, colour = "black") +
        geom_abline(slope = 1, intercept = 0, linetype = "dashed") +
    labs(title = k, x = "log GDP", y = "log Education Expenditure")


  pp <- lister[[k]] %>%
    ggplot(aes(x = log_real_gdp_total_pc, y = log_real_Total_Educ_Total_Exp_pp)) +
    geom_jitter(, colour = "darkorange2", alpha = 0.5) +
    geom_smooth(method=lm, colour = "black")  +
        geom_abline(slope = 1, intercept = 0, linetype = "dashed") +
    labs(main = k, x = "log GDP pc", y = "log Education Expenditure pp")
  
  tot2 <- lister[[k]] %>%
    ggplot(aes(x = log_real_gdp_priv_ind, y = log_real_Total_Educ_Total_Exp)) +
    geom_jitter(, colour = "darkgreen", alpha = 0.5) +
    geom_smooth(method=lm, colour = "black") +
        geom_abline(slope = 1, intercept = 0, linetype = "dashed") +
    labs(title = k, x = "log industry GDP", y = "log Education Expenditure")


  pp2 <- lister[[k]] %>%
    ggplot(aes(x = log_real_gdp_priv_ind_pc, y = log_real_Total_Educ_Total_Exp_pp)) +
    geom_jitter(, colour = "steelblue", alpha = 0.5) +
    geom_smooth(method=lm, colour = "black")  +
        geom_abline(slope = 1, intercept = 0, linetype = "dashed") +
    labs(main = k, x = "log industry GDP pc", y = "log Education Expenditure pp")

  print((tot + pp)/(tot2 + pp2) + plot_annotation(k, theme=theme(plot.title=element_text(hjust=0.5))))
  
}


```

#### KR 5: Economic Diversity

If we use a Chmura economic diversity indicator and plot GDP, private industry GDP, education expenditure, and elementary education expenditure we see that there is little difference in the mean of expenditure, however higher values of each occur only in more diverse counties. This data is only available at county level, not commuting zone level. 

```{r}

t1 <-  mines_restr %>% 
  ggplot(aes(x = econ_div, y = log_real_gdp_total_pc)) +
  geom_jitter(colour = "magenta") + 
  geom_smooth(method=lm, colour = "black")

t2 <- mines_restr %>% 
  ggplot(aes(x = econ_div, y = log_real_gdp_priv_ind_pc)) +
  geom_jitter(colour = "steelblue") +
  geom_smooth(method=lm, colour = "black")

t3 <- mines_restr %>% 
  ggplot(aes(x = econ_div, y = log_real_Total_Educ_Total_Exp_pp)) +
  geom_jitter(colour = "coral") +
  geom_smooth(method=lm, colour = "black")

t4 <- mines_restr %>% 
  ggplot(aes(x = econ_div, y = log_real_Elem_Educ_Total_Exp_pp)) +
  geom_jitter(colour = "coral") +
  geom_smooth(method=lm, colour = "black")
  
t1 + t2 + t3 + t4

```

#### KR 6: ESAs and County Expenditure

Around 2007, many states instituted Educational Service Agencies (ESAs) which sought to "equalise" public education across the country. To date, ~45 states have ESAs which are responsible for multiple school districts, most often across multiple counties. Therefore, when modelling county-level expenditure it will be important to understand how this change in educational expenditure affected county-level spending (ie. did ESAs replace or supplement county-level funding).

Only 593 counties of 2740 in the dataset have recorded revenue/expenditure from ESAs. After some digging, I believe that these values for ESAs are improperly recorded in the sense that the revenue is recorded only in counties in which the ESA's headquarters is located and not partitioned to the counties to which the revenue ultimately flows. All county-level total expenditure/revenue values that are used in the regressions on this page have explicitly excluded recorded ESA values for this reason (they are instead recorded in a variable called *esa_tot_exp* or *esa_tot_rev* in total and per pupil values).

The below graphs show some relationships between ESA and county-level finances. I have yet to arrive at a definitive understanding of how ESAs and county-level finances interact. They do not appear to be substitutes. As is evident, the data on ESA expenditure is patchy and highly volatile by county. At the moment, I believe this is because of imperfect/inconsistent reporting in comparison to traditional school district reporting. The four states that have recorded ESA expenditure before 2007 are California, Illinois, Minnesota, Oregon.

```{r, echo = FALSE, message = FALSE, warnings = FALSE}

esa_county <- readRDS(here("data/temp/esa_data_county_97_21.RDS")) %>% 
  mutate(state = substr(fips, 1,2))

esa_county$state_name = sapply(esa_county$state, get_state) 

st <- esa_county %>% 
  #filter(year >= 2007) %>% 
  group_by(year, state_name) %>% 
  summarise(across(esa_rev:esa_tot_exp, ~sum(., na.rm = TRUE))) %>% 
  mutate(across(esa_rev:esa_tot_exp, ~ifelse(. == 0, NA, .))) %>% 
  rename("State" = state_name) %>% 
  ggplot(aes(x = year, y = log(esa_tot_exp), group = State, color = State)) +
  geom_line() +
  geom_vline(xintercept = 2007, linetype = "dashed") +
  labs(x = "Year", y = "Expenditure (log kUSD)", title = "Expenditure by Educational Service Agencies per State", subtitle = "by State; Vertical line: x = 2007") +
  theme(legend.position = "none", panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
    guides(fill=guide_legend(nrow=5))

cty <- esa_county %>% 
  ggplot(aes(x = year, y = log(esa_tot_exp), group = fips, color = fips)) +
  geom_line() +
  geom_vline(xintercept = 2007, linetype = "dashed") +
  labs(x = "Year", y = "Expenditure in  (log kUSD)", title = "Expenditure by Educational Service Agencies per County", subtitle = "by County; Vertical line: x = 2007") +
  theme(legend.position = "none", panel.grid.major = element_blank(), panel.grid.minor = element_blank())

st / cty
  

```

With this we want to demonstrate how ESAs interact with our expenditure indicator. Does high ESA spending imply low/high local spending? It seems from the below that the two have a no correlation, implying little substitution? (Each point is a county in a particular year starting from 2007, colour represents state). Warm color-scale is (top-left panel) is expenditure values whereas the cool color scales are revenue values. The black line is a 45 degree line.

```{r, echo = FALSE, message = FALSE, warnings = FALSE, fig.height = 8}

rev <- mines_restr %>% 
  filter(year >=2007) %>% 
  dplyr::select(year, fips, log_real_Total_Revenue_pp, log_real_esa_rev_pp, state_name) %>% 
  mutate(year = as.factor(year)) %>% 
         #log_esa_rev_pp = ifelse(is.na(log_esa_rev_pp), 0, log_esa_rev_pp)) %>% 
  # group_by(fips) %>% 
  # mutate(across(log_Total_Expenditure:log_esa_tot_exp, ~mean(., na.rm = TRUE)))  %>% 
  # ungroup %>%  
  ggplot(aes(x = log_real_Total_Revenue_pp, y = log_real_esa_rev_pp, colour = state_name)) +
  geom_jitter() +
  geom_abline(slope = 1) +
  scale_color_viridis(discrete = T) +
  theme(legend.position = "none") +
  labs(x = "(log) Total Revenue per pupil", y = "(log) ESA Total Revenue pp")

exp <- mines_restr %>% 
  filter(year >=2007) %>% 
  dplyr::select(year, fips, log_real_Total_Educ_Total_Exp_pp, log_real_esa_tot_exp_pp, state_name) %>% 
  mutate(year = as.factor(year)) %>% 
         #log_esa_tot_exp_pp = ifelse(is.na(log_esa_tot_exp_pp), 0, log_esa_tot_exp_pp)) %>% 
  # group_by(fips) %>% 
  # mutate(across(log_Total_Expenditure:log_esa_tot_exp, ~mean(., na.rm = TRUE)))  %>% 
  # ungroup %>%  
  ggplot(aes(x = log_real_Total_Educ_Total_Exp_pp, y = log_real_esa_tot_exp_pp, colour = state_name)) +
  geom_jitter() +
  geom_abline(slope = 1) +
  scale_color_viridis(discrete = T, option = "A") +
  theme(legend.position = "none")  +
  labs(x = "(log) Total Expenditure per pupil", y = "(log) ESA Total Expenditure pp")

own <- mines_restr %>% 
  filter(year >=2007) %>% 
  dplyr::select(year, fips, log_real_Total_Rev_Own_Sources_pp, log_real_esa_rev_pp, state_name) %>% 
  mutate(year = as.factor(year)) %>% 
         #log_esa_rev_pp = ifelse(is.na(log_esa_rev_pp), 0, log_esa_rev_pp)) %>% 
  # group_by(fips) %>% 
  # mutate(across(log_Total_Expenditure:log_esa_tot_exp, ~mean(., na.rm = TRUE)))  %>% 
  # ungroup %>%  
  ggplot(aes(x = log_real_Total_Rev_Own_Sources_pp, y = log_real_esa_rev_pp, colour = state_name)) +
  geom_jitter() +
  geom_abline(slope = 1) +
  scale_color_viridis(discrete = T) +
  theme(legend.position = "none") +
  labs(x = "(log) Total Revenue Own Sources per pupil", y = "(log) ESA Total Revenue pp")


ig <- mines_restr %>% 
  filter(year >=2007) %>% 
  dplyr::select(year, fips, log_real_Total_IG_Revenue_pp, log_real_esa_rev_pp, state_name) %>% 
  mutate(year = as.factor(year)) %>% 
        # log_esa_rev_pp = ifelse(is.na(log_esa_rev_pp), 0, log_esa_rev_pp)) %>% 
  # group_by(fips) %>% 
  # mutate(across(log_Total_Expenditure:log_esa_tot_exp, ~mean(., na.rm = TRUE)))  %>% 
  # ungroup %>%  
  ggplot(aes(x = log_real_Total_IG_Revenue_pp, y = log_real_esa_rev_pp, colour = state_name)) +
  geom_jitter() +
  geom_abline(slope = 1) +
  scale_color_viridis(discrete = T) +
  theme(legend.position = "none")  +
  labs(x = "(log) Total IG Revenue per pupil", y = "(log) ESA Total Revenue pp")
# 
# st <- df %>% 
#   filter(year >=2007) %>% 
#   dplyr::select(year, fips, log_Total_State_IG_Revenue_pp, log_esa_rev_pp, state_name) %>% 
#   mutate(year = as.factor(year),
#          log_esa_rev_pp = ifelse(is.na(log_esa_rev_pp), 0, log_esa_rev_pp)) %>% 
#   # group_by(fips) %>% 
#   # mutate(across(log_Total_Expenditure:log_esa_tot_exp, ~mean(., na.rm = TRUE)))  %>% 
#   # ungroup %>%  
#   ggplot(aes(x = log_Total_State_IG_Revenue_pp, y = log_esa_rev_pp, colour = state_name)) +
#   geom_jitter() +
#   geom_abline(slope = 1, intercept = -2) +
#   scale_color_viridis(discrete = T) +
#   theme(legend.position = "none")

(exp + rev)/ (own + ig)
  

```

#### KR7: Expenditure per pupil and enrollment numbers

There might be a scaling law at play in the behavior of expenditure per pupil (expenditure per pupil declines as enrollment numbers decline). There are a few ways to control for this: simply add enrollment numbers (per CZ) as a regressor (suffers from the fact that aggregated up at a commuting zone level might lose heterogeneity in the CZ); control for enrollment/number of schools (need to create new variable for n_schools).
```{r, echo = FALSE, message = FALSE, warnings = FALSE}

enr_elem <- mines_cz %>% 
  ggplot(aes(x = log_Enrollment, y = log_real_Elem_Educ_Total_Exp_pp, color = year)) +
  geom_jitter() +
  labs(x = "(log) Enrollment", y = "Elem Expenditure (log kUSD)", title = "Expenditure by Total CZ Enrollment") +
  theme(legend.position = "none", panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
    guides(fill=guide_legend(nrow=5))

enr <- mines_cz %>% 
  ggplot(aes(x = log_Enrollment, y = log_real_Total_Educ_Total_Exp_pp, color = year)) +
  geom_jitter() +
  labs(x = "(log) Enrollment", y = "Educ. Expenditure (log kUSD)", title = "Expenditure by Total CZ Enrollment") +
  theme(legend.position = "none", panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
    guides(fill=guide_legend(nrow=5))

enr_schd <- mines_cz %>% 
  ggplot(aes(x = log_Enrollment/n_school_districts, y = log_real_Elem_Educ_Total_Exp_pp, color = year)) +
  geom_jitter() +
  labs(x = "avg. log(Enrollment) per school district by county", y = "Elem Expenditure (log kUSD)", title = "Expenditure by Average CZ Enrollment per School") +
  theme(legend.position = "none", panel.grid.major = element_blank(), panel.grid.minor = element_blank())

(enr_elem + enr) / enr_schd
  

```

#### Dataset coverage

In this sanity check, I look at what proportion of reported school age children per state seem to be represented in the enrollment numbers in our Survey of Local Finances dataset. We see that this share varies in magnitude by state (Maine having only 40% of school-age children covered). Considering that \~ 9% of students are enrolled in private schools across the US, the coverage in the top states is not too bad!

```{r}

natl_coverage <- mines_restr %>%
  select(year, Enrollment, pop_school_age) %>%
  group_by(year) %>%
  summarise(across(c(Enrollment, pop_school_age), ~sum(., na.rm = TRUE))) %>%
  mutate(pupils_covered = Enrollment/(pop_school_age*(14/15)))

all_ff_states <- readRDS(here("data/temp/shift_shares_base_01_05_11.RDS")) %>% 
  mutate(state = substr(fips, start = 1, stop = 2)) %>% group_by(state) %>% filter(any(annual_avg_emplvl_211 > 100)) %>% 
  ungroup %>% 
  arrange(annual_avg_emplvl_211) %>% 
  pull(state) %>% 
  unique %>% 
  lapply(., get_state)

energy_states <- c("ND", "WV", "OK", "WY", "PA", "TX")
all_coal_states <- c("AL", "AZ", "AR", "CO", "IL", "IN", "KS", "KY", "LA", "MS", "MO", "MT", "NM", "ND", "OH", "OK", "PA", "TX", "UT", "WV", "WY")
  
# State level
mines_restr %>% 
  select(state_name, year, Enrollment, pop_school_age) %>% 
  group_by(year, state_name) %>% 
  summarise(across(c(Enrollment, pop_school_age), ~sum(., na.rm = TRUE))) %>% 
  mutate(pupils_covered = Enrollment/(pop_school_age*(14/15)),
         label = if_else(year == 2021 & state_name %in% energy_states, state_name, NA)) %>% 
  #rbind(natl_coverage) %>% 
  ggplot(data = ., aes(x = year, y = pupils_covered, color= state_name)) +
  geom_line() +
  geom_line(data = natl_coverage, aes(y = pupils_covered), color = "black", linewidth = 1) +
  geom_hline(aes(yintercept = 1), linetype = "dotted") +
  geom_label_repel(aes(label = label),
                  nudge_x = 1,
                  na.rm = TRUE) +
  labs(title = "Enrollment reported as Proportion of School-age Children (ages 5-18)", 
       x = "Year",
       y = "Enrollment Reported as Proportion of School Age Children") +
  theme_minimal() +
  theme(legend.position = "none")
  

```

#### Maps

```{r}

mines_restr_2021 <- mines_restr %>% filter(year == 2021) %>% 
  select(fips, log_real_Property_Tax_pp, log_real_Elem_Educ_Total_Exp_pp, log_real_gdp_priv_ind_pc)
# Property Taxes
map_prop_tax <- plot_usmap(data = mines_restr_2021, values = "log_real_Property_Tax_pp", regions = "counties", col = "gray90", linewidth = 0.01, exclude = c("AK", "HI")) +
  scale_fill_distiller(palette = "Greens", name = "", direction = 1, na.value = "gray90") +
  theme(panel.background = element_rect(color = "white", fill = "white"),
        plot.title = element_text(face = "bold"), legend.background=element_blank()) +
  labs(title = "Property Taxes Collected 2021",
       subtitle = "log per pupil")


# Education Expenditure
map_elem_ed <- plot_usmap(data = mines_restr_2021, values = "log_real_Elem_Educ_Total_Exp_pp", regions = "counties", col = "gray90", linewidth = 0.01, exclude = c("AK", "HI")) +
  scale_fill_distiller(palette = "Purples", name = "", direction = 1, na.value = "gray90") +
  theme(panel.background = element_rect(color = "white", fill = "white"),
        plot.title = element_text(face = "bold"), legend.background=element_blank()) +
  labs(title = "Elementary Education Expenditure 2021",
       subtitle = "log per pupil")

# Private Industry GDP
map_priv_ind_gdp <- plot_usmap(data = mines_restr_2021, values = "log_real_gdp_priv_ind_pc", regions = "counties", col = "gray90", linewidth = 0.01, exclude = c("AK", "HI")) +
  scale_fill_distiller(palette = "Blues", name = "", direction = 1, na.value = "gray90") +
  theme(panel.background = element_rect(color = "white", fill = "white"),
        plot.title = element_text(face = "bold"), legend.background=element_blank()) +
  labs(title = "Private Industry GDP 2021",
       subtitle = "log per capita")

map_prop_tax + map_elem_ed + map_priv_ind_gdp

```
::: 

:::

# Trends

```{r, echo = FALSE, cache = TRUE}
# Data Transformation Function

# Pass a dataframe with distinct ids (ie. state_name, CZ, or fips)
# Dataframe should only have variables that should be transformed in line with all calls in the following function

data_transform <- function(df, vars, unit_id, time_id){
  df %>% 
    select(c(unit_id, time_id, vars)) %>%
    mutate(across(!c(unit_id, time_id),
                  list(t0 = ~(ifelse(!!sym(time_id) == 2001, 1, NA))*.,
                       t2 = ~(ifelse(!!sym(time_id) == 2003, 1, NA))*.),
                  .names = "{.fn}_{.col}")) %>% 
    group_by(!!sym(unit_id)) %>% 
    fill(matches("^t[[:digit:]]"),
      .direction = "down") %>% 
    mutate(across(!c(!!sym(time_id), matches("^t[[:digit:]]")), list(
                                                           ma3 = ~rollmean(., 3, align = 'right', fill = NA)),
                  .names = "{.fn}_{.col}")) %>% 
    ungroup %>% 
    mutate(across(vars,
                  list(delta = ~ . - get(paste0("t0_", cur_column())),
                       delta_ma3 = ~ get(paste0("ma3_", cur_column())) - get(paste0("t2_", cur_column()))),
                       .names = "{.fn}_{.col}")) %>% return(.)
}

rel_vars <- c("real_Elem_Educ_Total_Exp", "real_Elem_Educ_Total_Exp_pp",
              "real_Property_Tax","real_Property_Tax_pp", 
              "real_gdp_total", "real_gdp_total_pc", 
              "real_Total_Educ_Total_Exp", "real_Total_Educ_Total_Exp_pp", 
              "log_real_Elem_Educ_Total_Exp", "log_real_Elem_Educ_Total_Exp_pp",
              "log_real_Property_Tax","log_real_Property_Tax_pp",
              "log_real_Total_Educ_Total_Exp", "log_real_Total_Educ_Total_Exp_pp", 
              "log_real_gdp_total", "log_real_gdp_total_pc")

fips_trends_dat <- data_transform(mines_restr, rel_vars, "fips", "year") %>% 
  left_join(., code_match, by = "fips")

cz_trends_dat <- data_transform(mines_cz, rel_vars, "cz_id", "year") %>% 
  left_join(., distinct(select(code_match, -fips)), multiple = "first", by = "cz_id")

cz_1990_trends_dat <- data_transform(mines_cz_1990, rel_vars, "cz_id_1990", "year") %>% 
  left_join(., distinct(select(code_match, -fips)), multiple = "first", by = "cz_id_1990")

#cz_1990_trends_dat %>% saveRDS(here('data/temp/cz_1990_trends_dat.rds'))

state_trends_dat <- data_transform(mines_state, rel_vars, "state_name", "year")

natl_trends_dat <- data_transform(mines_natl, rel_vars, "id", "year")

```

```{r, echo = FALSE, cache = TRUE}

# National macro data

# # Read in macro data
uer <- read.csv(here('data/raw/macro_vars/UNRATE.csv')) %>%
    mutate(DATE = ymd(DATE),
           FD_UNRATE = UNRATE - lag(UNRATE))

gdp <- read.csv(here('data/raw/macro_vars/GDP.csv')) %>%
  mutate(DATE = ymd(DATE),
         FD_GDP = GDP - lag(GDP))

gdpc1 <- read.csv(here('data/raw/macro_vars/GDPC1.csv')) %>%
  mutate(DATE = ymd(DATE),
         FD_GDPC1 = GDPC1 - lag(GDPC1))

# NOTE: Consider replacing with total population values from official source - this is just a sum over the dataset we have - missing ~100M people!
pop_natl <- mines_natl %>% select(year, pop_total)
gdp_annual <- read.csv(here('data/raw/macro_vars/GDPC1_annual.csv')) %>% 
  mutate(year = as.numeric(substr(DATE, 1, 4)),
         gdp_natl = GDPC1) %>% 
  left_join(., pop_natl, by = "year") %>% 
  mutate(gdp_natl_pc = gdp_natl/pop_total,
         diff_gdp_natl = gdp_natl - lag(gdp_natl, 1),
         diff_gdp_natl_pc = gdp_natl_pc - lag(gdp_natl_pc, 1),
         log_gdp_natl = log(gdp_natl),
         log_gdp_natl_pc = log(gdp_natl_pc),
         diff_log_gdp_natl = log_gdp_natl - lag(log_gdp_natl, 1),
         diff_log_gdp_natl_pc = log_gdp_natl_pc - lag(log_gdp_natl_pc, 1)) 

# gdp_annual %>% 
#   select(!c(DATE, GDPC1)) %>% 
#   pivot_longer(!year) %>% 
#   ggplot(aes(x = year, y = value)) + 
#   geom_line() + 
#   facet_wrap(~name, scales = "free", ncol = 1)

#row.names(gdp_annual) = gdp_annual[1]

macro_natl <- left_join(uer, gdp, by = "DATE") %>%
  left_join(., gdpc1, by = "DATE") %>%
  tibble

#plot(decompose(gdp_annu type = 'additive'))

```


What would be great is to be able to econometrically test when a county is "declining." In the first step, it would be good to identify when a county is declining overall (GDP, poverty, etc) but ideally eventually apply this to the education outcome. My hope is that being able to identify counties that are "declining" we can either use this variable as a covariate or as a central point of analysis. The below analysis looks at state- and commuting zone level variables.

Some current options:

-   Deviation from t_0
-   Change in logs
-   y ~ beta*t
-   Coefficient Fixed Effect Step Indicator Saturation (Breaks in the coefficient for each individual)

<!-- -   Autocorrelation (X) -->

<!-- -   Trend indicator saturation - negative trend breaks? (\_) -->

-   Exhibit national or state-level GDP growth as global common factor; counties with negative factor loadings might arguably exhibit decline (\_)

-   Jennie's suggestion:

    -   plot county- , CZ, or state-level deviations from a national trend

::: panel-tabset
## Education

<!-- ### State Time Trends -->

<!-- ```{r, echo = FALSE, cache = TRUE} -->

<!-- trends <- feols(log_real_gdp_priv_ind ~ time:as.factor(state_name) | state_name + year, data = mines_state, se = "cluster", cluster = "state_name", panel.id = ~state_name+year) -->

<!-- #trends %>% etable(., se.below = TRUE) -->

<!-- trends$coefficients %>% -->

<!--   tibble %>% -->

<!--   rename(coef = '.') %>% -->

<!--   ggplot() + -->

<!--   geom_histogram(aes(x = coef), bins = 15) + -->

<!--   theme_bw() + -->

<!--   labs(title = "Histogram of State-level Trend Coefficient: (log) Real Private Industry GDP")+ -->

<!--   geom_vline(aes(xintercept = 0), colour = "red", linetype = "dotted") -->

<!-- ``` -->

::: panel-tabset
### Deviation from T0

One way to look at this descriptively is to look at the national, state and county-level trends. Here the "trend" is simply the difference between expenditure per pupil at the relevant level and expenditure per pupil in the first available observation as represented here: https://www.princeton.edu/\~erossi/DTNLC.pdf. (Note: this measure is imperfect for many reasons).

::: panel-tabset
#### States

```{r, fig.height = 10, echo = FALSE}
natl_pivoted <- natl_trends_dat %>% 
  select(year, contains('delta') & contains('log_real_Elem_Educ_Total_Exp_pp')) %>% 
  pivot_longer(!year) %>% 
  mutate(value = ifelse(grepl("ma3", name) & year == 2002, 0, value))

## State level trends with national trend reference line
state_trends_dat %>% 
  filter(state_name != "ME") %>% 
  select(state_name, year, contains('delta') & contains('log_real_Elem_Educ_Total_Exp_pp')) %>% 
  pivot_longer(!c(state_name, year)) %>% 
  ggplot(aes(x = year, y = value, colour = state_name)) +
      geom_line() +
  geom_line(data = natl_pivoted, aes(x = year, y = value), colour = "black") +
          facet_wrap(~name, scales = "free") +
  theme(legend.position = 'none') + 
  labs(title = "Difference from t0 in levels", 
       subtitle = "States")

```

```{r, fig.height = 10, echo = FALSE}

# filter(state_trends_dat, year == 2018) %>%
#   rename(state = state_name) %>% 
#   plot_usmap(data = ., values = "real_Elem_Educ_Total_Exp_pp", regions = "states", exclude = c("AK", "HI")) +
#   scale_fill_gradient(low = "thistle1", high = "purple4", na.value = "grey98") +
#     theme(panel.background = element_rect(color = "white", fill = "white"),
#         plot.title = element_text(face = "bold"), legend.background=element_blank(), legend.title = element_text("hello")) +
#     labs(title = "State Level Elem. Ed. Exp. pp (2018)")

```

```{r, fig.height = 10, echo = FALSE}

# filter(state_trends_dat, year == 2018) %>%
#   rename(state = state_name) %>% 
#   plot_usmap(data = ., values = "real_Total_Educ_Total_Exp_pp", regions = "states", exclude = c("AK", "HI")) +
#   scale_fill_gradient(low = "thistle1", high = "purple4", na.value = "grey98") +
#   #scale_fill_distiller(colours=c(bl,"white", re), name = "", direction = 1, na.value = "gray90", limits = c(-1, 1)) +
#     theme(panel.background = element_rect(color = "white", fill = "white"),
#         plot.title = element_text(face = "bold"), legend.background=element_blank(), legend.title = element_text("hello")) +
#     labs(title = "State Level Elem. Ed. Exp. pp (2018)")

```

#### CZs

::: panel-tabset
```{r, echo = FALSE, results = 'asis', fig.height = 12}

temp_cz <- cz_trends_dat %>% 
  filter(year > 2001 & state_name != "ME") %>% 
  mutate(delta_ma3_log_real_Elem_Educ_Total_Exp_pp = ifelse(year == 2002, 0, delta_ma3_log_real_Elem_Educ_Total_Exp_pp))

temp_natl <- natl_trends_dat %>% 
  filter(year > 2001) %>% 
  mutate(delta_ma3_log_real_Elem_Educ_Total_Exp_pp = ifelse(year == 2002, 0, delta_ma3_log_real_Elem_Educ_Total_Exp_pp))

temp_state <- state_trends_dat %>% 
  filter(year > 2001 & state_name != "ME") %>% 
  mutate(delta_ma3_log_real_Elem_Educ_Total_Exp_pp = ifelse(year == 2002, 0, delta_ma3_log_real_Elem_Educ_Total_Exp_pp))

## CZ level trends by state with national trend reference line
for(k in names(select(temp_cz, contains('delta') & contains('log_real_Elem_Educ_Total_Exp_pp')))){
  cat('##### ', k, ' \n')
    p <- temp_cz %>% 
      filter(state_name != "ME") %>% 
      select(state_name, cz_id, year, k) %>% 
      pivot_longer(!c(state_name, year, cz_id)) %>% 
      ggplot(aes(x = year, y = value, colour = cz_id)) +
      geom_line() +
      geom_line(data = temp_natl, aes(x = year, y = get(k)), colour = "black", linetype = "dashed") +
      geom_line(data = temp_state, aes(x = year, y = get(k)), colour = "red", linetype = "dashed") +
      theme_minimal() +
      theme(legend.position = 'none', strip.text = element_text(size = 12)) +
      scale_colour_viridis(discrete = TRUE) + 
      facet_wrap(~state_name, ncol = 7, scales = "free") +
      labs(title = paste0("Trends: ", k), 
           subtitle = "Commuting Zones",
           x = "Year",
           y = k) 
    
    print(p)
              cat('\n')
              cat('\n')
              }

```

<!-- #### Counties -->

<!-- ::: panel-tabset -->
<!-- ```{r, echo = FALSE, results = 'asis', fig.height = 12} -->

<!-- temp_fips <- fips_trends_dat %>%  -->
<!--   filter(year > 2001 & state_name != "ME") %>%  -->
<!--   mutate(delta_ma3_log_real_Elem_Educ_Total_Exp_pp = ifelse(year == 2002, 0, delta_ma3_log_real_Elem_Educ_Total_Exp_pp)) -->


<!-- for(k in names(select(fips_trends_dat, contains('delta') & contains('log_real_Elem_Educ_Total_Exp_pp')))){ -->
<!--   cat('##### ', k, ' \n') -->
<!--   p <- temp_fips %>%  -->
<!--     filter(state_name != "ME") %>%  -->
<!--     select(state_name, fips, year, k) %>%  -->
<!--     pivot_longer(!c(state_name, year, fips)) %>%  -->
<!--     ggplot(aes(x = year, y = value, colour = fips)) + -->
<!--     geom_line() + -->
<!--     geom_line(data = temp_natl, aes(x = year, y = get(k)), colour = "black", linetype = "dashed") + -->
<!--     geom_line(data = filter(temp_state, state_name != "ME"), aes(x = year, y = get(k)), colour = "red", linetype = "dashed") + -->
<!--     theme_minimal() + -->
<!--     theme(legend.position = 'none', strip.text = element_text(size = 12)) + -->
<!--     scale_colour_viridis(discrete = TRUE) +  -->
<!--     facet_wrap(~state_name, ncol = 7, scales = "free") + -->
<!--     theme(legend.position = 'none') +  -->
<!--     labs(title = paste0("Trends: ", k),  -->
<!--          subtitle = "Counties", -->
<!--          x = "Year", -->
<!--            y = k)  -->

<!--   print(p) -->
<!--               cat('\n') -->
<!--               cat('\n') -->
<!--               } -->

<!-- ``` -->
:::
:::

### Mean of change-log

Trend in log Elementary Education Expenditure (growth rate). The below plots show the mean of the change in log of the variable of interest. In the first panel I include no additional controls but in the latter two panels I include the state and national level growth rates as controls.

```{r, echo = FALSE, cache = TRUE, fig.height = 8}

# Create state-outlines
df <- usmap::us_map(regions = "states") %>% filter(!(abbr %in% c("HI", "AK")))

dat <- do.call('rbind', split(df, paste(df$abbr, df$piece)) |>
  lapply(function(x) st_sf(state = x$abbr[1],
                           st_sfc(st_polygon(list(cbind(x$x, x$y)))), 
                           crs = usmap::usmap_crs())))

natl_trend_pc <- mines_natl %>% 
  select(year, diff_log_real_Elem_Educ_Total_Exp_pp) %>% 
  distinct %>% 
  lm(diff_log_real_Elem_Educ_Total_Exp_pp ~ 1, data = .) %>% 
  .$coefficients %>% pluck(1)
  
county_ed_trends = mines_restr %>% 
  group_by(fips, state_name) %>% 
  do(model = lm(diff_log_real_Elem_Educ_Total_Exp_pp ~ 1, data = .)) %>% 
  ungroup 

county_ed_trends_controlled_natl = mines_restr %>% 
  left_join(., mines_natl, by = "year") %>% 
  group_by(fips, state_name) %>% 
  do(model = lm(diff_log_real_Elem_Educ_Total_Exp_pp.x ~ 1 +  diff_log_real_Elem_Educ_Total_Exp_pp.y, data = .)) %>% 
  ungroup 

county_ed_trends_controlled_state = mines_restr %>% 
   left_join(., mines_state, by = c("year", "state_name")) %>% 
  group_by(fips, state_name) %>% 
  do(model = lm(diff_log_real_Elem_Educ_Total_Exp_pp.x ~ 1 + diff_log_real_Elem_Educ_Total_Exp_pp.y, data = .)) %>% 
  ungroup 

county_ed_trends <- county_ed_trends %>% 
  rename("trend" = model) %>% 
  left_join(., county_ed_trends_controlled_natl, by = c('fips', 'state_name')) %>% 
  rename("trend_cont_natl" = model) %>% 
  left_join(., county_ed_trends_controlled_state, by = c('fips', 'state_name')) %>% 
  rename("trend_cont_state" = model)

county_ed_coefs <- tibble()
county_ed_sensitivities <- tibble()
for(k in 1:nrow(county_ed_trends)){
  s <- county_ed_trends %>% slice(k) %>% pull(fips)
  st <- county_ed_trends %>% slice(k) %>% pull(state_name)
  t <- county_ed_trends %>% slice(k) %>% 
    pull(trend) %>% first %>% .$coefficients %>% pluck(1) 
  t_n <- county_ed_trends %>% slice(k) %>% 
    pull(trend_cont_natl) %>% first %>% .$coefficients %>% pluck(1) 
  t_s <- county_ed_trends %>% slice(k) %>% 
    pull(trend_cont_state) %>% first %>% .$coefficients %>% pluck(1)
  

  s_n <- county_ed_trends %>% slice(k) %>% 
    pull(trend_cont_natl) %>% first %>% .$coefficients %>% pluck(2) 
  s_s <- county_ed_trends %>% slice(k) %>% 
    pull(trend_cont_state) %>% first %>% .$coefficients %>% pluck(2)
  
  county_ed_coefs <- rbind(county_ed_coefs, c(s,st, t, t_n, t_s))
  county_ed_sensitivities <- rbind(county_ed_sensitivities, c(s, st, s_n, s_s))
}

colnames(county_ed_coefs) <- names(county_ed_trends)
colnames(county_ed_sensitivities) <- c("fips", "state_name", "sensitivity_state", "sensitivity_natl")
county_ed_coefs <- county_ed_coefs %>% mutate(across(c(3:5), ~as.numeric(.)))
county_ed_sensitivities <- county_ed_sensitivities %>% mutate(across(c(3:4), ~as.numeric(.)))

county_ed_coefs %>% 
  pivot_longer(cols = contains("trend")) %>% 
  mutate(name = factor(name, levels=c("trend", "trend_cont_state", "trend_cont_natl"), labels = c("Trend in Elem. Ed. Exp. pp", "Trend in Elem. Ed. Exp. pp Controlled for State Trends", "Trend in Elem. Ed. Exp. pp Controlled for National Trends"))) %>% 
  ggplot() +
  geom_histogram(aes(x = value, fill = name), bins = 100, alpha = 0.9) +
  geom_vline(aes(xintercept = 0), colour = "darkgreen", linetype = "dotted") +
  geom_vline(aes(xintercept = natl_trend_pc), colour = "red", linetype = "dashed") +
  theme_bw() +
  facet_wrap(name ~ ., ncol = 1) +
  theme(legend.position = "none", strip.text = element_text(size = 14)) +
  scale_fill_brewer(palette = "Set2") +
  labs(x = NULL, y = "No. of Counties")


county_ed_coefs %>% 
  pivot_longer(cols = contains("trend")) %>% 
  mutate(name = factor(name, levels=c("trend", "trend_cont_state", "trend_cont_natl"), labels = c("Trend in Elem. Ed. Exp. pp", "Trend in Elem. Ed. Exp. pp Controlled for State Trends", "Trend in Elem. Ed. Exp. pp Controlled for National Trends"))) %>% 
  ggplot(aes(x = value, fill = name)) +
  geom_density(bins = 100, alpha = 0.5, position = "identity") +
  geom_vline(aes(xintercept = 0), colour = "darkgreen", linetype = "dotted") +
  geom_vline(aes(xintercept = natl_trend_pc), colour = "magenta", linetype = "dashed") +
  theme_bw() +
  theme(legend.position = "bottom", legend.title = element_blank()) +
  scale_fill_brewer(palette = "Set2") +
  labs(x = NULL, y = "No. of Counties")

# Education Expenditure
trend_ed_plot_pc <- plot_usmap(data = mute_outliers(county_ed_coefs, "trend"), values = "var_muted", regions = "counties", col = "gray90", linewidth = 0.01, exclude = c("AK", "HI")) +
  scale_fill_gradient2(midpoint = 0, na.value = "grey98") +
  #scale_fill_distiller(colours=c(bl,"white", re), name = "", direction = 1, na.value = "gray90", limits = c(-1, 1)) +
    theme(panel.background = element_rect(color = "white", fill = "white"),
        plot.title = element_text(face = "bold"), legend.background=element_blank(), legend.title = element_blank()) +
    labs(title = "County-level Trend in Elem. Ed. Exp. pp") +
  ggplot2::geom_sf(data = dat, colour = "blue", fill = NA, linewidth = 0.1)

# Education Expenditure
trend_ed_natl_plot_pc <- plot_usmap(data = mute_outliers(county_ed_coefs, "trend_cont_natl"), values = "var_muted", regions = "counties", col = "gray90", linewidth = 0.01, exclude = c("AK", "HI")) +
scale_fill_gradient2(na.value = "grey98", midpoint = 0) +
  #scale_fill_distiller(colours=c(bl,"white", re), name = "", direction = 1, na.value = "gray90", limits = c(-1, 1)) +
    theme(panel.background = element_rect(color = "white", fill = "white"),
        plot.title = element_text(face = "bold"), legend.background=element_blank(), legend.position = "none") +
    labs(title = "County-level Trend in Elem. Ed. Exp. pp",
       subtitle = "Controlling for National Level Elem. Ed. Exp. pp") +
  ggplot2::geom_sf(data = dat, colour = "blue", fill = NA, linewidth = 0.1)

# Education Expenditure
trend_ed_state_plot_pc <- plot_usmap(data = mute_outliers(county_ed_coefs, "trend_cont_state"), values = "var_muted", regions = "counties", col = "gray90", linewidth = 0.01, exclude = c("AK", "HI")) +
 scale_fill_gradient2(na.value = "grey98", midpoint = 0) +
  #scale_fill_distiller(colours=c(bl,"white", re), name = "", direction = 1, na.value = "gray90", limits = c(-1, 1)) +
    theme(panel.background = element_rect(color = "white", fill = "white"),
        plot.title = element_text(face = "bold"), legend.background=element_blank(), legend.position = "none") +
    labs(title = "County-level Trend in Elem. Ed. Exp. pp",
       subtitle = "Controlling for State Level Elem. Ed. Exp. pp") +
  ggplot2::geom_sf(data = dat, colour = "blue", fill = NA, linewidth = 0.1)

trend_ed_plot_pc + trend_ed_state_plot_pc + trend_ed_natl_plot_pc

rm(natl_trend_pc)
rm(county_ed_trends)
rm(county_ed_trends_controlled_natl)
rm(county_ed_trends_controlled_state)

```

```{r}

# Coefficient on state and national level trends
county_ed_sensitivities %>% 
  pivot_longer(cols = contains("sensitivity")) %>% 
  ggplot() +
  geom_histogram(aes(x = value, fill = name), bins = 100, position = "identity") +
  scale_fill_brewer(palette = "Set2")

plot_usmap(data = mute_outliers(county_ed_sensitivities, "sensitivity_natl"), values = "var_muted", regions = "counties", col = "gray90", linewidth = 0.01, exclude = c("AK", "HI")) +
  scale_fill_gradient2(na.value = "grey98", midpoint = 0) +
  #scale_fill_distiller(colours=c(bl,"white", re), name = "", direction = 1, na.value = "gray90", limits = c(-1, 1)) +
   theme(panel.background = element_rect(color = "white", fill = "white"),
       plot.title = element_text(face = "bold"), legend.background=element_blank()) +
    labs(title = "County-level Sensitivity to National Trend in Elem. Ed. Exp. pp") +
  ggplot2::geom_sf(data = dat, colour = "blue", fill = NA, linewidth = 0.1)


plot_usmap(data = mute_outliers(county_ed_sensitivities, "sensitivity_state"), values = "var_muted", regions = "counties", col = "gray90", linewidth = 0.01, exclude = c("AK", "HI")) +
 scale_fill_gradient2(na.value = "grey98", midpoint = 0) +
  #scale_fill_distiller(colours=c(bl,"white", re), name = "", direction = 1, na.value = "gray90", limits = c(-1, 1)) +
    theme(panel.background = element_rect(color = "white", fill = "white"),
        plot.title = element_text(face = "bold"), legend.background=element_blank()) +
    labs(title = "County-level Sensitivity to State Trend in Elem. Ed. Exp. pp") +
   ggplot2::geom_sf(data = dat, colour = "blue", fill = NA, linewidth = 0.1)


```
### Trends

Trend in log Elementary Education Expenditure. The below plots show the coefficient estimate on the time-step variable in the trend equation. In the first panel I include no additional controls but in the latter two panels I include the state and national level growth rates as controls.

```{r, echo = FALSE, cache = TRUE, fig.height = 8}

# Create state-outlines
df <- usmap::us_map(regions = "states") %>% filter(!(abbr %in% c("HI", "AK")))

dat <- do.call('rbind', split(df, paste(df$abbr, df$piece)) |>
  lapply(function(x) st_sf(state = x$abbr[1],
                           st_sfc(st_polygon(list(cbind(x$x, x$y)))), 
                           crs = usmap::usmap_crs())))

natl_trend_pc <- mines_natl %>% 
  select(year, time, log_real_Elem_Educ_Total_Exp_pp) %>% 
  distinct %>% 
  lm(log_real_Elem_Educ_Total_Exp_pp ~ time, data = .) %>% 
  .$coefficients %>% pluck(1)
  
county_ed_trends = mines_restr %>% 
  group_by(fips, state_name) %>% 
  do(model = lm(log_real_Elem_Educ_Total_Exp_pp ~ time, data = .)) %>% 
  ungroup 

county_ed_trends_controlled_natl = mines_restr %>% 
  select(-time) %>% 
  left_join(., mines_natl, by = "year") %>% 
  group_by(fips, state_name) %>% 
  do(model = lm(log_real_Elem_Educ_Total_Exp_pp.x ~ time + diff_log_real_Elem_Educ_Total_Exp_pp.y, data = .)) %>% 
  ungroup 

county_ed_trends_controlled_state = mines_restr %>% 
  select(-time) %>% 
   left_join(., mines_state, by = c("year", "state_name")) %>% 
  group_by(fips, state_name) %>% 
  do(model = lm(log_real_Elem_Educ_Total_Exp_pp.x ~ time + diff_log_real_Elem_Educ_Total_Exp_pp.y, data = .)) %>% 
  ungroup 

county_ed_trends <- county_ed_trends %>% 
  rename("trend" = model) %>% 
  left_join(., county_ed_trends_controlled_natl, by = c('fips', 'state_name')) %>% 
  rename("trend_cont_natl" = model) %>% 
  left_join(., county_ed_trends_controlled_state, by = c('fips', 'state_name')) %>% 
  rename("trend_cont_state" = model)

county_ed_coefs <- tibble()
county_ed_sensitivities <- tibble()
for(k in 1:nrow(county_ed_trends)){
  s <- county_ed_trends %>% slice(k) %>% pull(fips)
  st <- county_ed_trends %>% slice(k) %>% pull(state_name)
  t <- county_ed_trends %>% slice(k) %>% 
    pull(trend) %>% first %>% .$coefficients %>% pluck(1) 
  t_n <- county_ed_trends %>% slice(k) %>% 
    pull(trend_cont_natl) %>% first %>% .$coefficients %>% pluck(1) 
  t_s <- county_ed_trends %>% slice(k) %>% 
    pull(trend_cont_state) %>% first %>% .$coefficients %>% pluck(1)
  

  s_n <- county_ed_trends %>% slice(k) %>% 
    pull(trend_cont_natl) %>% first %>% .$coefficients %>% pluck(2) 
  s_s <- county_ed_trends %>% slice(k) %>% 
    pull(trend_cont_state) %>% first %>% .$coefficients %>% pluck(2)
  
  county_ed_coefs <- rbind(county_ed_coefs, c(s,st, t, t_n, t_s))
  county_ed_sensitivities <- rbind(county_ed_sensitivities, c(s, st, s_n, s_s))
}

colnames(county_ed_coefs) <- names(county_ed_trends)
colnames(county_ed_sensitivities) <- c("fips", "state_name", "sensitivity_state", "sensitivity_natl")
county_ed_coefs <- county_ed_coefs %>% mutate(across(c(3:5), ~as.numeric(.)))
county_ed_sensitivities <- county_ed_sensitivities %>% mutate(across(c(3:4), ~as.numeric(.)))

county_ed_coefs %>% 
  pivot_longer(cols = contains("trend")) %>% 
  mutate(name = factor(name, levels=c("trend", "trend_cont_state", "trend_cont_natl"), labels = c("Trend in Elem. Ed. Exp. pp", "Trend in Elem. Ed. Exp. pp Controlled for State Trends", "Trend in Elem. Ed. Exp. pp Controlled for National Trends"))) %>% 
  ggplot() +
  geom_histogram(aes(x = value, fill = name), bins = 100, alpha = 0.9) +
  geom_vline(aes(xintercept = 0), colour = "darkgreen", linetype = "dotted") +
  geom_vline(aes(xintercept = natl_trend_pc), colour = "red", linetype = "dashed") +
  theme_bw() +
  facet_wrap(name ~ ., ncol = 1, scales = "free") +
  theme(legend.position = "none", strip.text = element_text(size = 14)) +
  scale_fill_brewer(palette = "Set2") +
  labs(x = NULL, y = "No. of Counties")


county_ed_coefs %>% 
  pivot_longer(cols = contains("trend")) %>% 
  mutate(name = factor(name, levels=c("trend", "trend_cont_state", "trend_cont_natl"), labels = c("Trend in Elem. Ed. Exp. pp", "Trend in Elem. Ed. Exp. pp Controlled for State Trends", "Trend in Elem. Ed. Exp. pp Controlled for National Trends"))) %>% 
  ggplot(aes(x = value, fill = name)) +
  geom_density(bins = 100, alpha = 0.5, position = "identity") +
  geom_vline(aes(xintercept = 0), colour = "darkgreen", linetype = "dotted") +
  geom_vline(aes(xintercept = natl_trend_pc), colour = "magenta", linetype = "dashed") +
  theme_bw() +
  theme(legend.position = "bottom", legend.title = element_blank()) +
  scale_fill_brewer(palette = "Set2") +
  labs(x = NULL, y = "No. of Counties")

# Education Expenditure
trend_ed_plot_pc <- plot_usmap(data = mute_outliers(county_ed_coefs, "trend"), values = "var_muted", regions = "counties", col = "gray90", linewidth = 0.01, exclude = c("AK", "HI")) +
  scale_fill_gradient2(midpoint = 0, na.value = "grey98") +
  #scale_fill_distiller(colours=c(bl,"white", re), name = "", direction = 1, na.value = "gray90", limits = c(-1, 1)) +
    theme(panel.background = element_rect(color = "white", fill = "white"),
        plot.title = element_text(face = "bold"), legend.background=element_blank(), legend.title = element_blank()) +
    labs(title = "County-level Trend in Elem. Ed. Exp. pp") +
  ggplot2::geom_sf(data = dat, colour = "blue", fill = NA, linewidth = 0.1)

# Education Expenditure
trend_ed_natl_plot_pc <- plot_usmap(data = mute_outliers(county_ed_coefs, "trend_cont_natl"), values = "var_muted", regions = "counties", col = "gray90", linewidth = 0.01, exclude = c("AK", "HI")) +
scale_fill_gradient2(na.value = "grey98", midpoint = 0) +
  #scale_fill_distiller(colours=c(bl,"white", re), name = "", direction = 1, na.value = "gray90", limits = c(-1, 1)) +
    theme(panel.background = element_rect(color = "white", fill = "white"),
        plot.title = element_text(face = "bold"), legend.background=element_blank(), legend.position = "none") +
    labs(title = "County-level Trend in Elem. Ed. Exp. pp",
       subtitle = "Controlling for National Level Elem. Ed. Exp. pp") +
  ggplot2::geom_sf(data = dat, colour = "blue", fill = NA, linewidth = 0.1)

# Education Expenditure
trend_ed_state_plot_pc <- plot_usmap(data = mute_outliers(county_ed_coefs, "trend_cont_state"), values = "var_muted", regions = "counties", col = "gray90", linewidth = 0.01, exclude = c("AK", "HI")) +
 scale_fill_gradient2(na.value = "grey98", midpoint = 0) +
  #scale_fill_distiller(colours=c(bl,"white", re), name = "", direction = 1, na.value = "gray90", limits = c(-1, 1)) +
    theme(panel.background = element_rect(color = "white", fill = "white"),
        plot.title = element_text(face = "bold"), legend.background=element_blank(), legend.position = "none") +
    labs(title = "County-level Trend in Elem. Ed. Exp. pp",
       subtitle = "Controlling for State Level Elem. Ed. Exp. pp") +
  ggplot2::geom_sf(data = dat, colour = "blue", fill = NA, linewidth = 0.1)

trend_ed_plot_pc + trend_ed_state_plot_pc + trend_ed_natl_plot_pc

rm(natl_trend_pc)
rm(county_ed_trends)
rm(county_ed_trends_controlled_natl)
rm(county_ed_trends_controlled_state)

```
<!-- ### Growth Rates -->

<!-- ::: panel-tabset -->
<!-- #### States -->

<!-- ```{r, echo = FALSE} -->

<!-- mines_state %>%  -->
<!--   filter(year != 2001) %>%  -->
<!--   ggplot() + -->
<!--   geom_line(aes(x = year, y = diff_log_real_Elem_Educ_Total_Exp_pp, color = state_name)) -->


<!-- ``` -->

<!-- #### Commuting Zones -->

<!-- ```{r, echo = FALSE} -->

<!-- # Outliers -->

<!-- mines_cz %>%  -->
<!--   filter(year != 2001) %>%  -->
<!--   ggplot() + -->
<!--   geom_line(aes(x = year, y = diff_log_real_Elem_Educ_Total_Exp_pp, color =  cz_id)) + -->
<!--   theme(legend.position = "none") -->

<!-- mines_cz %>%  -->
<!--   group_by(cz_id) %>% -->
<!--   mutate(across(diff_log_real_Elem_Educ_Total_Exp_pp, list(ma3 = ~rollmean(., 3, align = 'right', fill = NA), -->
<!--                                                            ma2 = ~rollmean(., 2, align = 'right', fill = NA)), .names = "{.fn}_{.col}")) %>%  -->
<!--   ungroup %>%  -->
<!--   left_join(., distinct(select(code_match, -fips)), multiple = "first", by = "cz_id") %>%  -->
<!--   filter(year > 2003) %>%  -->
<!--   ggplot() + -->
<!--   geom_line(aes(x = year, y = ma3_diff_log_real_Elem_Educ_Total_Exp_pp, color =  cz_id)) + -->
<!--   theme(legend.position = "none") + -->
<!--   facet_wrap(~state_name) -->


<!-- ``` -->

<!-- #### Counties -->

<!-- ```{r, echo = FALSE} -->

<!-- # Outliers -->

<!-- pos_coefs <- mute_outliers(county_ed_coefs, "trend_cont_natl") %>%  -->
<!--   filter(var_muted != trend_cont_natl & var_muted > 0) %>%  -->
<!--   pull(fips) %>% unique -->

<!-- mines_df %>% -->
<!--   filter(fips %in% pos_coefs) %>% -->
<!--   select(fips, year, log_real_Property_Tax_pp, log_real_Elem_Educ_Total_Exp_pp) %>%  -->
<!--   pivot_longer(!c(fips, year)) %>%  -->
<!--   ggplot(aes(x = year, y = value, color = name)) + -->
<!--   geom_line() + -->
<!--   facet_wrap(~fips, scales = "free") -->

<!-- ``` -->
<!-- ::: -->

<!-- ### Outliers -->

<!-- ::: panel-tabset -->
<!-- #### Negative -->

<!-- ```{r, echo = FALSE} -->

<!-- # Outliers -->
<!-- neg_coefs <- mute_outliers(county_ed_coefs, "trend_cont_natl") %>%  -->
<!--   filter(var_muted != trend_cont_natl & var_muted < 0) %>%  -->
<!--   pull(fips) %>% unique -->

<!-- mines_df %>% -->
<!--   filter(fips %in% neg_coefs) %>% -->
<!--   select(fips, year, log_real_Property_Tax_pp, log_real_Elem_Educ_Total_Exp_pp) %>%  -->
<!--   pivot_longer(!c(fips, year)) %>%  -->
<!--   ggplot(aes(x = year, y = value, color = name)) + -->
<!--   geom_line() + -->
<!--   facet_wrap(~fips, scales = "free") -->

<!-- ``` -->

<!-- #### Positive -->

<!-- ```{r, echo = FALSE} -->

<!-- # Outliers -->

<!-- pos_coefs <- mute_outliers(county_ed_coefs, "trend_cont_natl") %>%  -->
<!--   filter(var_muted != trend_cont_natl & var_muted > 0) %>%  -->
<!--   pull(fips) %>% unique -->

<!-- mines_df %>% -->
<!--   filter(fips %in% pos_coefs) %>% -->
<!--   select(fips, year, log_real_Property_Tax_pp, log_real_Elem_Educ_Total_Exp_pp) %>%  -->
<!--   pivot_longer(!c(fips, year)) %>%  -->
<!--   ggplot(aes(x = year, y = value, color = name)) + -->
<!--   geom_line() + -->
<!--   facet_wrap(~fips, scales = "free") -->

<!-- ``` -->
<!-- ::: -->
:::

## GDPPC

::: panel-tabset
### Mean of change-log

Mean change in log Real GDP (growth rate). The below plots show the coefficient estimate on the time-step variable in the trend equation. In the first panel I include no additional controls but in the latter two panels I include the state and national level growth rates as controls.

```{r, echo = FALSE, cache = TRUE}

natl_trend <- gdp_annual %>% 
  select(year, diff_log_gdp_natl) %>% 
  distinct %>% 
  lm(diff_log_gdp_natl ~ 1, data = .) %>% 
  .$coefficients %>% pluck(1)
  
county_trends = mines_restr %>% group_by(fips, state_name) %>% do(model = lm(diff_log_real_gdp_total ~ 1, data = .)) %>% ungroup 

county_trends_controlled_natl = mines_restr %>% 
  left_join(., gdp_annual, by = "year") %>% 
  group_by(fips, state_name) %>% 
  do(model = lm(diff_log_real_gdp_total ~ 1 + diff_log_gdp_natl, data = .)) %>% 
  ungroup 


county_trends_controlled_state = mines_restr %>% 
  left_join(., mines_state, by = c("year", "state_name")) %>% 
  group_by(fips, state_name) %>% 
  do(model = lm(diff_log_real_gdp_total.x ~ 1 + diff_log_real_gdp_total.y, data = .)) %>% 
  ungroup 

state_trends = mines_state %>% group_by(state_name) %>% do(model = lm(diff_log_real_gdp_total ~ 1, data = .)) %>% ungroup

state_trends_controlled_natl = mines_state %>% 
  left_join(., gdp_annual, by = "year") %>% 
  group_by(state_name) %>% 
  do(model = lm(diff_log_real_gdp_total ~ 1 + diff_log_gdp_natl, data = .)) %>% 
  ungroup

natl_trend = gdp_annual %>% do(model = lm(diff_log_gdp_natl ~ 1, data = .)) %>% pull(model) %>% first %>% .$coefficients %>% pluck(1)

county_trends <- county_trends %>% 
  rename("trend" = model) %>% 
  left_join(., county_trends_controlled_natl, by = c('fips', 'state_name')) %>% 
  rename("trend_cont_natl" = model) %>% 
  left_join(., county_trends_controlled_state, by = c('fips', 'state_name')) %>% 
  rename("trend_cont_state" = model)


state_trends <- state_trends %>%
  rename("trend" = model) %>%
  left_join(., state_trends_controlled_natl, by = c('state_name')) %>%
  rename("trend_cont_natl" = model)


county_coefs <- tibble()
for(k in 1:nrow(county_trends)){
  s <- county_trends %>% slice(k) %>% pull(fips)
  st <- county_trends %>% slice(k) %>% pull(state_name)
  t <- county_trends %>% slice(k) %>% 
    pull(trend) %>% first %>% .$coefficients %>% pluck(1) 
  t_n <- county_trends %>% slice(k) %>% 
    pull(trend_cont_natl) %>% first %>% .$coefficients %>% pluck(1) 
  t_s <- county_trends %>% slice(k) %>% 
    pull(trend_cont_state) %>% first %>% .$coefficients %>% pluck(1)
  
  county_coefs <- rbind(county_coefs, c(s,st, t, t_n, t_s))
}

colnames(county_coefs) <- names(county_trends)
county_coefs <- county_coefs %>% mutate(across(c(3:5), ~as.numeric(.)))

rm(county_trends)
rm(county_trends_controlled_natl)
rm(county_trends_controlled_state)


```

```{r, echo = FALSE, cache = TRUE}

county_trends_pc = mines_restr %>% 
  group_by(fips, state_name) %>% 
  do(model = lm(diff_log_real_gdp_total_pc ~ 1, data = .)) %>% ungroup

county_trends_controlled_natl_pc = mines_restr %>% 
  left_join(., gdp_annual, by = "year") %>% 
  group_by(fips, state_name) %>% 
  do(model = lm(diff_log_real_gdp_total_pc ~ 1 + diff_log_gdp_natl_pc, data = .)) %>% 
  ungroup 

county_trends_controlled_state_pc = mines_restr %>% 
  left_join(., mines_state, by = c("year", "state_name")) %>% 
  group_by(fips, state_name) %>% 
  do(model = lm(diff_log_real_gdp_total_pc.x ~ 1 + diff_log_real_gdp_total_pc.y, data = .)) %>% 
  ungroup 

state_trends_pc = mines_state %>% 
  group_by(state_name) %>% 
  do(model = lm(diff_log_real_gdp_total_pc ~ 1, data = .)) %>% 
  ungroup

state_trends_controlled_natl_pc = mines_state %>%
  left_join(., gdp_annual, by = "year") %>% 
  group_by(state_name) %>% 
  do(model = lm(diff_log_real_gdp_total_pc ~ 1 + diff_log_gdp_natl_pc, data = .)) %>% 
  ungroup

natl_trend_pc = gdp_annual %>% 
  select(year, diff_log_gdp_natl_pc) %>% 
  distinct %>% do(model = lm(diff_log_gdp_natl_pc ~ 1, data = .)) %>% 
  pull(model) %>% first %>% .$coefficients %>% pluck(1)

county_trends_pc <- county_trends_pc %>% 
  rename("trend_pc" = model) %>% 
  left_join(., county_trends_controlled_natl_pc, by = c('fips', 'state_name')) %>% 
  rename("trend_cont_natl_pc" = model) %>% 
  left_join(., county_trends_controlled_state_pc, by = c('fips', 'state_name')) %>% 
  rename("trend_cont_state_pc" = model)

county_coefs_pc <- tibble()
for(k in 1:nrow(county_trends_pc)){
  s <- county_trends_pc %>% slice(k) %>% pull(fips)
  st <- county_trends_pc %>% slice(k) %>% pull(state_name)
  t <- county_trends_pc %>% slice(k) %>% 
    pull(trend_pc) %>% first %>% .$coefficients %>% pluck(1) 
  t_n <- county_trends_pc %>% slice(k) %>% 
    pull(trend_cont_natl_pc) %>% first %>% .$coefficients %>% pluck(1) 
  t_s <- county_trends_pc %>% slice(k) %>% 
    pull(trend_cont_state_pc) %>% first %>% .$coefficients %>% pluck(1)
  
  county_coefs_pc <- rbind(county_coefs_pc, c(s,st, t, t_n, t_s))
}

colnames(county_coefs_pc) <- names(county_trends_pc)
county_coefs_pc <- county_coefs_pc %>% mutate(across(c(3:5), ~as.numeric(.)))

county_coefs_all <- county_coefs %>% 
  left_join(county_coefs_pc, by = c("fips", "state_name"))


state_trends_pc <- state_trends_pc %>%
  rename("trend_pc" = model) %>%
  left_join(., state_trends_controlled_natl_pc, by = c('state_name')) %>%
  rename("trend_cont_natl_pc" = model)


rm(county_trends_pc)
rm(county_trends_controlled_natl_pc)
rm(county_trends_controlled_state_pc)
rm(state_trends_controlled_natl_pc)


```

```{r, echo = FALSE, cache = TRUE, fig.height = 10}

# tplot <- county_coefs_all %>% 
#   select(-contains("pc")) %>% 
#   pivot_longer(cols = contains("trend")) %>% 
#   ggplot() +
#   geom_histogram(aes(x = value), bins = 100, fill = "darkgreen", alpha = 0.7) +
#   geom_vline(aes(xintercept = 0), colour = "grey", linetype = "dotted") +
#   geom_vline(aes(xintercept = natl_trend), colour = "red", linetype = "dashed") +
#   theme_bw() +
#   facet_wrap(factor(name,levels=c("trend", "trend_cont_state", "trend_cont_natl"), labels = c("Trend in GDP", "Trend in GDP Controlled for State Trends", "Trend in GDP Controlled for National Trends")) ~ ., ncol = 1) +
#     theme(legend.position = "none") +
#   labs(x = "Linear trend in Real GDP", y = "No. of Counties")

county_coefs_all %>% 
  pivot_longer(cols = contains("pc")) %>% 
  ggplot() +
  geom_histogram(aes(x = value), bins = 100, fill = "purple") +
  geom_vline(aes(xintercept = 0), colour = "grey", linetype = "dotted") +
  geom_vline(aes(xintercept = natl_trend_pc), colour = "red", linetype = "dashed") +
  theme_bw() +
  facet_wrap(factor(name,levels=c("trend_pc", "trend_cont_state_pc", "trend_cont_natl_pc"), labels = c("Trend in PC GDP", "Trend in PC GDP Controlled for State Trends", "Trend in PC GDP Controlled for National Trends")) ~ ., ncol = 1) +
  theme(legend.position = "none") +
  labs(x = "Linear trend in Real GDP PC", y = "No. of Counties")


```

```{r, echo = FALSE, cache = TRUE, fig.height = 14}
library(ggbrain)

# Education Expenditure
trend_plot_pc <- plot_usmap(data = county_coefs_all, values = "trend_pc", regions = "counties", col = "gray90", linewidth = 0.01, exclude = c("AK", "HI")) +
scale_fill_gradient2(na.value = "grey98", midpoint = 0) +
  #scale_fill_distiller(colours=c(bl,"white", re), name = "", direction = 1, na.value = "gray90", limits = c(-1, 1)) +
    theme(panel.background = element_rect(color = "white", fill = "white"),
        plot.title = element_text(face = "bold"), legend.background=element_blank()) +
    labs(title = "County-level Trend in Real GDP PC")

# Education Expenditure
trend_natl_plot_pc <- plot_usmap(data = county_coefs_all, values = "trend_cont_natl_pc", regions = "counties", col = "gray90", linewidth = 0.01, exclude = c("AK", "HI")) +
scale_fill_gradient2(na.value = "grey98", midpoint = 0) +
  #scale_fill_distiller(colours=c(bl,"white", re), name = "", direction = 1, na.value = "gray90", limits = c(-1, 1)) +
    theme(panel.background = element_rect(color = "white", fill = "white"),
        plot.title = element_text(face = "bold"), legend.background=element_blank()) +
    labs(title = "County-level Trend in Real GDP PC",
       subtitle = "Controlling for National Level GDP PC")

# Education Expenditure
trend_state_plot_pc <- plot_usmap(data = county_coefs_all, values = "trend_cont_state_pc", regions = "counties", col = "gray90", linewidth = 0.01, exclude = c("AK", "HI")) +
scale_fill_gradient2(na.value = "grey98", midpoint = 0) + 
  #scale_fill_distiller(colours=c(bl,"white", re), name = "", direction = 1, na.value = "gray90", limits = c(-1, 1)) +
    theme(panel.background = element_rect(color = "white", fill = "white"),
        plot.title = element_text(face = "bold"), legend.background=element_blank()) +
    labs(title = "County-level Trend in Real GDP PC",
       subtitle = "Controlling for State Level GDP PC")

trend_plot_pc / trend_state_plot_pc / trend_natl_plot_pc

```

```{r, echo = FALSE, cache = TRUE}

state_coefs <- tibble()

for(k in 1:nrow(state_trends)){
  s <- state_trends %>% slice(k) %>% pull(state_name)

  t <- state_trends %>% slice(k) %>%
    pull(trend) %>% first %>% .$coefficients %>% pluck(1)

  t_n <- state_trends %>% slice(k) %>%
    pull(trend_cont_natl) %>% first %>% .$coefficients %>% pluck(1)

  state_coefs <- rbind(state_coefs, c(s,t, t_n))
}

colnames(state_coefs) <- names(state_trends)
state_coefs %>%
  mutate(across(contains("trend"), as.numeric)) %>% 
  tibble %>% 
  pivot_longer(!state_name) %>% 
  ggplot()+
  geom_histogram(aes(x = value, fill = name), bins = 15, position = "identity", alpha  = 0.7) +
  geom_vline(aes(xintercept = 0), color = "magenta", linetype = "dotted") +
  scale_fill_brewer(palette = "Set2") +
  labs(title = "Histogram of State-level Trend Coefficient: (log) Real GDP")

```

### Outliers

The following isoltes those counties that have significant negative or positive trend values. 
::: panel-tabset
#### Negative

```{r, echo = FALSE}

# Outliers
neg_coefs <- mute_outliers(county_ed_coefs, "trend_cont_natl") %>% 
  filter(var_muted != trend_cont_natl & var_muted < 0) %>% 
  pull(fips) %>% unique

mines_restr %>%
  filter(fips %in% neg_coefs) %>%
  select(fips, year, log_real_gdp_priv_ind_pc, log_real_Property_Tax_pp, log_real_Elem_Educ_Total_Exp_pp) %>% 
  pivot_longer(!c(fips, year)) %>% 
  ggplot(aes(x = year, y = value, color = name)) +
  geom_line() +
  facet_wrap(~fips, scales = "free")

```

#### Positive

```{r, echo = FALSE}

# Outliers

pos_coefs <- mute_outliers(county_coefs_all, "trend_cont_natl") %>% 
  filter(var_muted != trend_cont_natl & var_muted > 0) %>% 
  pull(fips) %>% unique

mines_restr %>%
  filter(fips %in% pos_coefs) %>%
  select(fips, year, log_real_gdp_priv_ind_pc, log_real_Property_Tax_pp, log_real_Elem_Educ_Total_Exp_pp) %>% 
  pivot_longer(!c(fips, year)) %>% 
  ggplot(aes(x = year, y = value, color = name)) +
  geom_line() +
  facet_wrap(~fips, scales = "free")


```
:::
:::
:::

## Supplementary Materials

1.  National data on GDP, UER, (and poverty)

```{r, echo = FALSE, cache = TRUE}

macro_natl %>% 
  select(-FD_UNRATE, -contains("GDPC1")) %>%
  mutate(GDP = GDP/10,
         UNRATE = UNRATE*100) %>%
  pivot_longer(cols = c(UNRATE, GDP, FD_GDP)) %>%
  filter(!is.na(value)) %>% 
  ggplot() +
  geom_line(aes(x = DATE, y = value)) +
  facet_wrap(~name, ncol = 1, scales = "free") +
  theme_minimal() +
  scale_x_date(limits = as.Date(c('2000-01-01','2022-01-01')))
  
```

```{r, echo = FALSE}

# library(covFactorModel)
# iX <- mines_restr %>% 
#   select(fips, year, real_gdp_total) %>% 
#   pivot_wider(names_from = "fips", values_from = "real_gdp_total") %>% 
#   mutate(year=as_date(year))
# 
# z <- read.zoo(iX, format = "%Y/%m/%d")
# x <- as.xts(z)
# 
# X <- xts(iX, order.by = as_date(iX$year))
# natl_gdp <- xts(gdp_annual[,-1], order.by=as_date(gdp_annual[,1]))
# 
# factor_model <- factorModel(xts(iX, order.by = as_date(iX$year)), type = "M", econ_fact = natl_gdp)
# cbind(alpha = factor_model$alpha, beta = factor_model$beta)

```

2.  State data on GDP, UER, and poverty

3.  Extract trends of state and national data

```{r, echo = FALSE, cache = TRUE}

county_gdp <- readRDS(here("data/temp/gdp_controls.RDS")) %>%
  mutate(across(contains("mining"), ~ifelse(is.na(.), 0, .))) %>%
  select(year, fips, real_gdp_total, real_gdp_priv_ind)

# county_gdp %>%
#   group_by(fips) %>%
#   mutate(across(c(real_gdp_total, real_gdp_priv_ind), list(ma5 = ~rollmean(., 5, align = 'right', fill = NA),
#                                                            ma3 = ~rollmean(., 3, align = 'right', fill = NA),
#                                                            ma2 = ~rollmean(., 2, align = 'right', fill = NA)),
#          .names = "{.fn}_{.col}"))


```

4.  Deviations at county level from national and state-level trends

5.  Plot deviations

6.  Saturation to find structural breaks in these deviations

Result: UE, GDP, and Poverty gaps

7.  PCA on those three gaps

8.  Retain index from PCA

9.  Step break in index

10. Line up with any notable events?

11. Place "gaps" in a panel structure for break detection

12. Autocorrelation plot to test no residual autocorrelation in model above with PCA indices.

```{r, echo = FALSE, cache = TRUE}

county_gdp %>% 
  ggplot() 

county_gdp %>% 
  ggplot() 

county_gdp %>% 
  ggplot() 

county_gdp %>% 
  ggplot() 

```



### Cointegration testing

Suggestions from Jennie:

Engle-Granger Test - bivariate scenario

Johanson Test - multivariate setting \[GDP, Property Taxes, Ed. Spending\]

### Autocorrelation

First-differences

```{r, echo = FALSE, cache = TRUE}

state_list <- unique(mines_state$state_name)

acf_list <- list()

for(s in 1:length(state_list)){

  ps <- mines_state %>%
    filter(state_name == state_list[s]) %>%
    pull(diff_real_gdp_priv_ind) %>%
    acf(., na.action = na.pass, plot = FALSE)
  acf_list[[s]] <- ps

}

acf_list[[1]] %>% plot
acf_list[[10]] %>% plot
acf_list[[15]] %>% plot
acf_list[[30]] %>% plot

```

-   Autocorrelation (Education only) (X)

-   Correlation plots (X)

-   Cross-correlation plot of Education and GDP (X)

-   Are GDP and Education Expenditure cointegrating (or do they exhibit a decoupling?) (\_)

### Autocorrelation

First-differences

```{r, echo = FALSE, cache = TRUE}

state_list <- unique(mines_state$state_name)

acf_list <- list()

for(s in 1:length(state_list)){
  ps <- mines_state %>%
    filter(state_name == state_list[s]) %>%
    pull(diff_real_Elem_Educ_Total_Exp) %>%
    acf(., na.action = na.pass, plot = FALSE)
  acf_list[[s]] <- ps

}

acf_list[[1]] %>% plot
acf_list[[10]] %>% plot
acf_list[[15]] %>% plot
acf_list[[30]] %>% plot

```

### Correlation Plots (Education and GDP)

```{r, fig.height = 10, echo = FALSE, cache = TRUE}

ggplot(mines_state,
       aes(x= real_gdp_priv_ind,
           y= real_Elem_Educ_Total_Exp))+
  geom_point()+
  facet_wrap(~state_name, scales = "free") +
  geom_smooth(fill="blue", alpha=0.1)+
  geom_smooth(method='lm', formula= y~x, se=FALSE, col="red",lty=2)+
  theme(axis.text.y = element_blank(),
        axis.ticks.y = element_blank(),
        axis.text.x = element_blank(),
        axis.ticks.x = element_blank())+
    labs(title = "Correlation Plot of Elementary Ed. Expenditure and Private Industry GDP",
       subtitle = "in real USD by state",
       y = "Elem. Ed. Exp",
       x = "Priv. Ind. GDP")

```

### Cross-correlation of Educ Exp and Priv. Industry GDP

```{r, echo = FALSE, cache = TRUE}

for(s in 1:length(state_list[1:6])){
  gdp_var <- mines_state %>%
    filter(year != 2001) %>% 
    filter(state_name == state_list[s]) %>%
    pull(diff_real_gdp_priv_ind)
  
  elem_ed_var <- mines_state %>%
    filter(year != 2001) %>% 
    filter(state_name == state_list[s]) %>%
    pull(diff_real_Elem_Educ_Total_Exp)
  
  cor(gdp_var, elem_ed_var)

  ccf(as.numeric(gdp_var), as.numeric(elem_ed_var)) %>% print
  cor(as.numeric(gdp_var), as.numeric(elem_ed_var), method = c("pearson", "kendall", "spearman"))
  cor.test(as.numeric(gdp_var), as.numeric(elem_ed_var), method=c("pearson", "kendall", "spearman"))
  
}

#aTSA::coint.test(Deathts, VAXts, d = 1, nlag = 2, output = TRUE)

# cor(x, y, method = c("pearson", "kendall", "spearman"))
# cor.test(x, y, method=c("pearson", "kendall", "spearman"))

```

